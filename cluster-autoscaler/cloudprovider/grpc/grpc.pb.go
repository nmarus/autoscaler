// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cloudprovider/grpc/grpc.proto

package grpccloudprovider

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v1 "k8s.io/api/core/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstanceErrorClass int32

const (
	InstanceErrorClass_ERROR_UNDEFINED        InstanceErrorClass = 0
	InstanceErrorClass_ERROR_OUT_OF_RESOURCES InstanceErrorClass = 1
	InstanceErrorClass_ERROR_OTHER            InstanceErrorClass = 99
)

var InstanceErrorClass_name = map[int32]string{
	0:  "ERROR_UNDEFINED",
	1:  "ERROR_OUT_OF_RESOURCES",
	99: "ERROR_OTHER",
}

var InstanceErrorClass_value = map[string]int32{
	"ERROR_UNDEFINED":        0,
	"ERROR_OUT_OF_RESOURCES": 1,
	"ERROR_OTHER":            99,
}

func (x InstanceErrorClass) String() string {
	return proto.EnumName(InstanceErrorClass_name, int32(x))
}

func (InstanceErrorClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{0}
}

type InstanceState int32

const (
	InstanceState_STATE_UNDEFINED     InstanceState = 0
	InstanceState_STATE_RUNNING       InstanceState = 1
	InstanceState_STATE_BEING_CREATED InstanceState = 2
	InstanceState_STATE_BEING_DELETED InstanceState = 3
)

var InstanceState_name = map[int32]string{
	0: "STATE_UNDEFINED",
	1: "STATE_RUNNING",
	2: "STATE_BEING_CREATED",
	3: "STATE_BEING_DELETED",
}

var InstanceState_value = map[string]int32{
	"STATE_UNDEFINED":     0,
	"STATE_RUNNING":       1,
	"STATE_BEING_CREATED": 2,
	"STATE_BEING_DELETED": 3,
}

func (x InstanceState) String() string {
	return proto.EnumName(InstanceState_name, int32(x))
}

func (InstanceState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{1}
}

type CloudProviderServiceRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudProviderServiceRequest) Reset()         { *m = CloudProviderServiceRequest{} }
func (m *CloudProviderServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CloudProviderServiceRequest) ProtoMessage()    {}
func (*CloudProviderServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{0}
}

func (m *CloudProviderServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudProviderServiceRequest.Unmarshal(m, b)
}
func (m *CloudProviderServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudProviderServiceRequest.Marshal(b, m, deterministic)
}
func (m *CloudProviderServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudProviderServiceRequest.Merge(m, src)
}
func (m *CloudProviderServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CloudProviderServiceRequest.Size(m)
}
func (m *CloudProviderServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudProviderServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudProviderServiceRequest proto.InternalMessageInfo

func (m *CloudProviderServiceRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type KubeAdmConfig struct {
	KubeAdmAddress        string   `protobuf:"bytes,1,opt,name=kubeAdmAddress,proto3" json:"kubeAdmAddress,omitempty"`
	KubeAdmToken          string   `protobuf:"bytes,2,opt,name=kubeAdmToken,proto3" json:"kubeAdmToken,omitempty"`
	KubeAdmCACert         string   `protobuf:"bytes,3,opt,name=kubeAdmCACert,proto3" json:"kubeAdmCACert,omitempty"`
	KubeAdmExtraArguments []string `protobuf:"bytes,4,rep,name=kubeAdmExtraArguments,proto3" json:"kubeAdmExtraArguments,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *KubeAdmConfig) Reset()         { *m = KubeAdmConfig{} }
func (m *KubeAdmConfig) String() string { return proto.CompactTextString(m) }
func (*KubeAdmConfig) ProtoMessage()    {}
func (*KubeAdmConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{1}
}

func (m *KubeAdmConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeAdmConfig.Unmarshal(m, b)
}
func (m *KubeAdmConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeAdmConfig.Marshal(b, m, deterministic)
}
func (m *KubeAdmConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeAdmConfig.Merge(m, src)
}
func (m *KubeAdmConfig) XXX_Size() int {
	return xxx_messageInfo_KubeAdmConfig.Size(m)
}
func (m *KubeAdmConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeAdmConfig.DiscardUnknown(m)
}

var xxx_messageInfo_KubeAdmConfig proto.InternalMessageInfo

func (m *KubeAdmConfig) GetKubeAdmAddress() string {
	if m != nil {
		return m.KubeAdmAddress
	}
	return ""
}

func (m *KubeAdmConfig) GetKubeAdmToken() string {
	if m != nil {
		return m.KubeAdmToken
	}
	return ""
}

func (m *KubeAdmConfig) GetKubeAdmCACert() string {
	if m != nil {
		return m.KubeAdmCACert
	}
	return ""
}

func (m *KubeAdmConfig) GetKubeAdmExtraArguments() []string {
	if m != nil {
		return m.KubeAdmExtraArguments
	}
	return nil
}

type NodeGroupDef struct {
	NodeGroupID          string            `protobuf:"bytes,1,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	MinSize              int32             `protobuf:"varint,2,opt,name=minSize,proto3" json:"minSize,omitempty"`
	MaxSize              int32             `protobuf:"varint,3,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	Provisionned         bool              `protobuf:"varint,4,opt,name=provisionned,proto3" json:"provisionned,omitempty"`
	IncludeExistingNode  bool              `protobuf:"varint,5,opt,name=includeExistingNode,proto3" json:"includeExistingNode,omitempty"`
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeGroupDef) Reset()         { *m = NodeGroupDef{} }
func (m *NodeGroupDef) String() string { return proto.CompactTextString(m) }
func (*NodeGroupDef) ProtoMessage()    {}
func (*NodeGroupDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{2}
}

func (m *NodeGroupDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupDef.Unmarshal(m, b)
}
func (m *NodeGroupDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupDef.Marshal(b, m, deterministic)
}
func (m *NodeGroupDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupDef.Merge(m, src)
}
func (m *NodeGroupDef) XXX_Size() int {
	return xxx_messageInfo_NodeGroupDef.Size(m)
}
func (m *NodeGroupDef) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupDef.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupDef proto.InternalMessageInfo

func (m *NodeGroupDef) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *NodeGroupDef) GetMinSize() int32 {
	if m != nil {
		return m.MinSize
	}
	return 0
}

func (m *NodeGroupDef) GetMaxSize() int32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *NodeGroupDef) GetProvisionned() bool {
	if m != nil {
		return m.Provisionned
	}
	return false
}

func (m *NodeGroupDef) GetIncludeExistingNode() bool {
	if m != nil {
		return m.IncludeExistingNode
	}
	return false
}

func (m *NodeGroupDef) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ConnectRequest struct {
	ProviderID           string           `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	ResourceLimiter      *ResourceLimiter `protobuf:"bytes,2,opt,name=resourceLimiter,proto3" json:"resourceLimiter,omitempty"`
	KubeAdmConfiguration *KubeAdmConfig   `protobuf:"bytes,3,opt,name=kubeAdmConfiguration,proto3" json:"kubeAdmConfiguration,omitempty"`
	Nodes                []*NodeGroupDef  `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	AutoProvisionned     bool             `protobuf:"varint,5,opt,name=autoProvisionned,proto3" json:"autoProvisionned,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{3}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *ConnectRequest) GetResourceLimiter() *ResourceLimiter {
	if m != nil {
		return m.ResourceLimiter
	}
	return nil
}

func (m *ConnectRequest) GetKubeAdmConfiguration() *KubeAdmConfig {
	if m != nil {
		return m.KubeAdmConfiguration
	}
	return nil
}

func (m *ConnectRequest) GetNodes() []*NodeGroupDef {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ConnectRequest) GetAutoProvisionned() bool {
	if m != nil {
		return m.AutoProvisionned
	}
	return false
}

type ConnectReply struct {
	// Types that are valid to be assigned to Response:
	//	*ConnectReply_Error
	//	*ConnectReply_Connected
	Response             isConnectReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ConnectReply) Reset()         { *m = ConnectReply{} }
func (m *ConnectReply) String() string { return proto.CompactTextString(m) }
func (*ConnectReply) ProtoMessage()    {}
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{4}
}

func (m *ConnectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectReply.Unmarshal(m, b)
}
func (m *ConnectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectReply.Marshal(b, m, deterministic)
}
func (m *ConnectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectReply.Merge(m, src)
}
func (m *ConnectReply) XXX_Size() int {
	return xxx_messageInfo_ConnectReply.Size(m)
}
func (m *ConnectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectReply proto.InternalMessageInfo

type isConnectReply_Response interface {
	isConnectReply_Response()
}

type ConnectReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ConnectReply_Connected struct {
	Connected bool `protobuf:"varint,2,opt,name=connected,proto3,oneof"`
}

func (*ConnectReply_Error) isConnectReply_Response() {}

func (*ConnectReply_Connected) isConnectReply_Response() {}

func (m *ConnectReply) GetResponse() isConnectReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ConnectReply) GetError() *Error {
	if x, ok := m.GetResponse().(*ConnectReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ConnectReply) GetConnected() bool {
	if x, ok := m.GetResponse().(*ConnectReply_Connected); ok {
		return x.Connected
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConnectReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConnectReply_Error)(nil),
		(*ConnectReply_Connected)(nil),
	}
}

type NameReply struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameReply) Reset()         { *m = NameReply{} }
func (m *NameReply) String() string { return proto.CompactTextString(m) }
func (*NameReply) ProtoMessage()    {}
func (*NameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{5}
}

func (m *NameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameReply.Unmarshal(m, b)
}
func (m *NameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameReply.Marshal(b, m, deterministic)
}
func (m *NameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameReply.Merge(m, src)
}
func (m *NameReply) XXX_Size() int {
	return xxx_messageInfo_NameReply.Size(m)
}
func (m *NameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NameReply.DiscardUnknown(m)
}

var xxx_messageInfo_NameReply proto.InternalMessageInfo

func (m *NameReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NodeGroupsReply struct {
	NodeGroups           []*NodeGroup `protobuf:"bytes,1,rep,name=nodeGroups,proto3" json:"nodeGroups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NodeGroupsReply) Reset()         { *m = NodeGroupsReply{} }
func (m *NodeGroupsReply) String() string { return proto.CompactTextString(m) }
func (*NodeGroupsReply) ProtoMessage()    {}
func (*NodeGroupsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{6}
}

func (m *NodeGroupsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupsReply.Unmarshal(m, b)
}
func (m *NodeGroupsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupsReply.Marshal(b, m, deterministic)
}
func (m *NodeGroupsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupsReply.Merge(m, src)
}
func (m *NodeGroupsReply) XXX_Size() int {
	return xxx_messageInfo_NodeGroupsReply.Size(m)
}
func (m *NodeGroupsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupsReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupsReply proto.InternalMessageInfo

func (m *NodeGroupsReply) GetNodeGroups() []*NodeGroup {
	if m != nil {
		return m.NodeGroups
	}
	return nil
}

type NodeGroupForNodeRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeGroupForNodeRequest) Reset()         { *m = NodeGroupForNodeRequest{} }
func (m *NodeGroupForNodeRequest) String() string { return proto.CompactTextString(m) }
func (*NodeGroupForNodeRequest) ProtoMessage()    {}
func (*NodeGroupForNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{7}
}

func (m *NodeGroupForNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupForNodeRequest.Unmarshal(m, b)
}
func (m *NodeGroupForNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupForNodeRequest.Marshal(b, m, deterministic)
}
func (m *NodeGroupForNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupForNodeRequest.Merge(m, src)
}
func (m *NodeGroupForNodeRequest) XXX_Size() int {
	return xxx_messageInfo_NodeGroupForNodeRequest.Size(m)
}
func (m *NodeGroupForNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupForNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupForNodeRequest proto.InternalMessageInfo

func (m *NodeGroupForNodeRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *NodeGroupForNodeRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type NodeGroupes struct {
	Items                []*NodeGroup `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NodeGroupes) Reset()         { *m = NodeGroupes{} }
func (m *NodeGroupes) String() string { return proto.CompactTextString(m) }
func (*NodeGroupes) ProtoMessage()    {}
func (*NodeGroupes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{8}
}

func (m *NodeGroupes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupes.Unmarshal(m, b)
}
func (m *NodeGroupes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupes.Marshal(b, m, deterministic)
}
func (m *NodeGroupes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupes.Merge(m, src)
}
func (m *NodeGroupes) XXX_Size() int {
	return xxx_messageInfo_NodeGroupes.Size(m)
}
func (m *NodeGroupes) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupes.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupes proto.InternalMessageInfo

func (m *NodeGroupes) GetItems() []*NodeGroup {
	if m != nil {
		return m.Items
	}
	return nil
}

type NodeGroupForNodeReply struct {
	// Types that are valid to be assigned to Response:
	//	*NodeGroupForNodeReply_Error
	//	*NodeGroupForNodeReply_NodeGroup
	Response             isNodeGroupForNodeReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *NodeGroupForNodeReply) Reset()         { *m = NodeGroupForNodeReply{} }
func (m *NodeGroupForNodeReply) String() string { return proto.CompactTextString(m) }
func (*NodeGroupForNodeReply) ProtoMessage()    {}
func (*NodeGroupForNodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{9}
}

func (m *NodeGroupForNodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupForNodeReply.Unmarshal(m, b)
}
func (m *NodeGroupForNodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupForNodeReply.Marshal(b, m, deterministic)
}
func (m *NodeGroupForNodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupForNodeReply.Merge(m, src)
}
func (m *NodeGroupForNodeReply) XXX_Size() int {
	return xxx_messageInfo_NodeGroupForNodeReply.Size(m)
}
func (m *NodeGroupForNodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupForNodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupForNodeReply proto.InternalMessageInfo

type isNodeGroupForNodeReply_Response interface {
	isNodeGroupForNodeReply_Response()
}

type NodeGroupForNodeReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type NodeGroupForNodeReply_NodeGroup struct {
	NodeGroup *NodeGroup `protobuf:"bytes,2,opt,name=nodeGroup,proto3,oneof"`
}

func (*NodeGroupForNodeReply_Error) isNodeGroupForNodeReply_Response() {}

func (*NodeGroupForNodeReply_NodeGroup) isNodeGroupForNodeReply_Response() {}

func (m *NodeGroupForNodeReply) GetResponse() isNodeGroupForNodeReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *NodeGroupForNodeReply) GetError() *Error {
	if x, ok := m.GetResponse().(*NodeGroupForNodeReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *NodeGroupForNodeReply) GetNodeGroup() *NodeGroup {
	if x, ok := m.GetResponse().(*NodeGroupForNodeReply_NodeGroup); ok {
		return x.NodeGroup
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NodeGroupForNodeReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NodeGroupForNodeReply_Error)(nil),
		(*NodeGroupForNodeReply_NodeGroup)(nil),
	}
}

type PricingModelReply struct {
	// Types that are valid to be assigned to Response:
	//	*PricingModelReply_Error
	//	*PricingModelReply_PriceModel
	Response             isPricingModelReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PricingModelReply) Reset()         { *m = PricingModelReply{} }
func (m *PricingModelReply) String() string { return proto.CompactTextString(m) }
func (*PricingModelReply) ProtoMessage()    {}
func (*PricingModelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{10}
}

func (m *PricingModelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PricingModelReply.Unmarshal(m, b)
}
func (m *PricingModelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PricingModelReply.Marshal(b, m, deterministic)
}
func (m *PricingModelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PricingModelReply.Merge(m, src)
}
func (m *PricingModelReply) XXX_Size() int {
	return xxx_messageInfo_PricingModelReply.Size(m)
}
func (m *PricingModelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PricingModelReply.DiscardUnknown(m)
}

var xxx_messageInfo_PricingModelReply proto.InternalMessageInfo

type isPricingModelReply_Response interface {
	isPricingModelReply_Response()
}

type PricingModelReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type PricingModelReply_PriceModel struct {
	PriceModel *PricingModel `protobuf:"bytes,2,opt,name=priceModel,proto3,oneof"`
}

func (*PricingModelReply_Error) isPricingModelReply_Response() {}

func (*PricingModelReply_PriceModel) isPricingModelReply_Response() {}

func (m *PricingModelReply) GetResponse() isPricingModelReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *PricingModelReply) GetError() *Error {
	if x, ok := m.GetResponse().(*PricingModelReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *PricingModelReply) GetPriceModel() *PricingModel {
	if x, ok := m.GetResponse().(*PricingModelReply_PriceModel); ok {
		return x.PriceModel
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PricingModelReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PricingModelReply_Error)(nil),
		(*PricingModelReply_PriceModel)(nil),
	}
}

type AvailableMachineTypes struct {
	MachineType          []string `protobuf:"bytes,1,rep,name=machineType,proto3" json:"machineType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableMachineTypes) Reset()         { *m = AvailableMachineTypes{} }
func (m *AvailableMachineTypes) String() string { return proto.CompactTextString(m) }
func (*AvailableMachineTypes) ProtoMessage()    {}
func (*AvailableMachineTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{11}
}

func (m *AvailableMachineTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableMachineTypes.Unmarshal(m, b)
}
func (m *AvailableMachineTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableMachineTypes.Marshal(b, m, deterministic)
}
func (m *AvailableMachineTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableMachineTypes.Merge(m, src)
}
func (m *AvailableMachineTypes) XXX_Size() int {
	return xxx_messageInfo_AvailableMachineTypes.Size(m)
}
func (m *AvailableMachineTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableMachineTypes.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableMachineTypes proto.InternalMessageInfo

func (m *AvailableMachineTypes) GetMachineType() []string {
	if m != nil {
		return m.MachineType
	}
	return nil
}

type AvailableMachineTypesReply struct {
	// Types that are valid to be assigned to Response:
	//	*AvailableMachineTypesReply_Error
	//	*AvailableMachineTypesReply_AvailableMachineTypes
	Response             isAvailableMachineTypesReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *AvailableMachineTypesReply) Reset()         { *m = AvailableMachineTypesReply{} }
func (m *AvailableMachineTypesReply) String() string { return proto.CompactTextString(m) }
func (*AvailableMachineTypesReply) ProtoMessage()    {}
func (*AvailableMachineTypesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{12}
}

func (m *AvailableMachineTypesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableMachineTypesReply.Unmarshal(m, b)
}
func (m *AvailableMachineTypesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableMachineTypesReply.Marshal(b, m, deterministic)
}
func (m *AvailableMachineTypesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableMachineTypesReply.Merge(m, src)
}
func (m *AvailableMachineTypesReply) XXX_Size() int {
	return xxx_messageInfo_AvailableMachineTypesReply.Size(m)
}
func (m *AvailableMachineTypesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableMachineTypesReply.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableMachineTypesReply proto.InternalMessageInfo

type isAvailableMachineTypesReply_Response interface {
	isAvailableMachineTypesReply_Response()
}

type AvailableMachineTypesReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AvailableMachineTypesReply_AvailableMachineTypes struct {
	AvailableMachineTypes *AvailableMachineTypes `protobuf:"bytes,2,opt,name=availableMachineTypes,proto3,oneof"`
}

func (*AvailableMachineTypesReply_Error) isAvailableMachineTypesReply_Response() {}

func (*AvailableMachineTypesReply_AvailableMachineTypes) isAvailableMachineTypesReply_Response() {}

func (m *AvailableMachineTypesReply) GetResponse() isAvailableMachineTypesReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *AvailableMachineTypesReply) GetError() *Error {
	if x, ok := m.GetResponse().(*AvailableMachineTypesReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *AvailableMachineTypesReply) GetAvailableMachineTypes() *AvailableMachineTypes {
	if x, ok := m.GetResponse().(*AvailableMachineTypesReply_AvailableMachineTypes); ok {
		return x.AvailableMachineTypes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AvailableMachineTypesReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AvailableMachineTypesReply_Error)(nil),
		(*AvailableMachineTypesReply_AvailableMachineTypes)(nil),
	}
}

type NewNodeGroupRequest struct {
	ProviderID           string            `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	MachineType          string            `protobuf:"bytes,2,opt,name=machineType,proto3" json:"machineType,omitempty"`
	NodeGroupID          string            `protobuf:"bytes,3,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	MinNodeSize          int32             `protobuf:"varint,4,opt,name=minNodeSize,proto3" json:"minNodeSize,omitempty"`
	MaxNodeSize          int32             `protobuf:"varint,5,opt,name=maxNodeSize,proto3" json:"maxNodeSize,omitempty"`
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemLabels         map[string]string `protobuf:"bytes,7,rep,name=systemLabels,proto3" json:"systemLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints               []*v1.Taint       `protobuf:"bytes,8,rep,name=taints,proto3" json:"taints,omitempty"`
	ExtraResources       map[string]string `protobuf:"bytes,9,rep,name=extraResources,proto3" json:"extraResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NewNodeGroupRequest) Reset()         { *m = NewNodeGroupRequest{} }
func (m *NewNodeGroupRequest) String() string { return proto.CompactTextString(m) }
func (*NewNodeGroupRequest) ProtoMessage()    {}
func (*NewNodeGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{13}
}

func (m *NewNodeGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewNodeGroupRequest.Unmarshal(m, b)
}
func (m *NewNodeGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewNodeGroupRequest.Marshal(b, m, deterministic)
}
func (m *NewNodeGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewNodeGroupRequest.Merge(m, src)
}
func (m *NewNodeGroupRequest) XXX_Size() int {
	return xxx_messageInfo_NewNodeGroupRequest.Size(m)
}
func (m *NewNodeGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewNodeGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewNodeGroupRequest proto.InternalMessageInfo

func (m *NewNodeGroupRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *NewNodeGroupRequest) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *NewNodeGroupRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *NewNodeGroupRequest) GetMinNodeSize() int32 {
	if m != nil {
		return m.MinNodeSize
	}
	return 0
}

func (m *NewNodeGroupRequest) GetMaxNodeSize() int32 {
	if m != nil {
		return m.MaxNodeSize
	}
	return 0
}

func (m *NewNodeGroupRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NewNodeGroupRequest) GetSystemLabels() map[string]string {
	if m != nil {
		return m.SystemLabels
	}
	return nil
}

func (m *NewNodeGroupRequest) GetTaints() []*v1.Taint {
	if m != nil {
		return m.Taints
	}
	return nil
}

func (m *NewNodeGroupRequest) GetExtraResources() map[string]string {
	if m != nil {
		return m.ExtraResources
	}
	return nil
}

type NewNodeGroupReply struct {
	// Types that are valid to be assigned to Response:
	//	*NewNodeGroupReply_Error
	//	*NewNodeGroupReply_NodeGroup
	Response             isNewNodeGroupReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *NewNodeGroupReply) Reset()         { *m = NewNodeGroupReply{} }
func (m *NewNodeGroupReply) String() string { return proto.CompactTextString(m) }
func (*NewNodeGroupReply) ProtoMessage()    {}
func (*NewNodeGroupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{14}
}

func (m *NewNodeGroupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewNodeGroupReply.Unmarshal(m, b)
}
func (m *NewNodeGroupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewNodeGroupReply.Marshal(b, m, deterministic)
}
func (m *NewNodeGroupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewNodeGroupReply.Merge(m, src)
}
func (m *NewNodeGroupReply) XXX_Size() int {
	return xxx_messageInfo_NewNodeGroupReply.Size(m)
}
func (m *NewNodeGroupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewNodeGroupReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewNodeGroupReply proto.InternalMessageInfo

type isNewNodeGroupReply_Response interface {
	isNewNodeGroupReply_Response()
}

type NewNodeGroupReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type NewNodeGroupReply_NodeGroup struct {
	NodeGroup *NodeGroup `protobuf:"bytes,2,opt,name=nodeGroup,proto3,oneof"`
}

func (*NewNodeGroupReply_Error) isNewNodeGroupReply_Response() {}

func (*NewNodeGroupReply_NodeGroup) isNewNodeGroupReply_Response() {}

func (m *NewNodeGroupReply) GetResponse() isNewNodeGroupReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *NewNodeGroupReply) GetError() *Error {
	if x, ok := m.GetResponse().(*NewNodeGroupReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *NewNodeGroupReply) GetNodeGroup() *NodeGroup {
	if x, ok := m.GetResponse().(*NewNodeGroupReply_NodeGroup); ok {
		return x.NodeGroup
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NewNodeGroupReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NewNodeGroupReply_Error)(nil),
		(*NewNodeGroupReply_NodeGroup)(nil),
	}
}

type ResourceLimiterReply struct {
	// Types that are valid to be assigned to Response:
	//	*ResourceLimiterReply_Error
	//	*ResourceLimiterReply_ResourceLimiter
	Response             isResourceLimiterReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ResourceLimiterReply) Reset()         { *m = ResourceLimiterReply{} }
func (m *ResourceLimiterReply) String() string { return proto.CompactTextString(m) }
func (*ResourceLimiterReply) ProtoMessage()    {}
func (*ResourceLimiterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{15}
}

func (m *ResourceLimiterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceLimiterReply.Unmarshal(m, b)
}
func (m *ResourceLimiterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceLimiterReply.Marshal(b, m, deterministic)
}
func (m *ResourceLimiterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLimiterReply.Merge(m, src)
}
func (m *ResourceLimiterReply) XXX_Size() int {
	return xxx_messageInfo_ResourceLimiterReply.Size(m)
}
func (m *ResourceLimiterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLimiterReply.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLimiterReply proto.InternalMessageInfo

type isResourceLimiterReply_Response interface {
	isResourceLimiterReply_Response()
}

type ResourceLimiterReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ResourceLimiterReply_ResourceLimiter struct {
	ResourceLimiter *ResourceLimiter `protobuf:"bytes,2,opt,name=resourceLimiter,proto3,oneof"`
}

func (*ResourceLimiterReply_Error) isResourceLimiterReply_Response() {}

func (*ResourceLimiterReply_ResourceLimiter) isResourceLimiterReply_Response() {}

func (m *ResourceLimiterReply) GetResponse() isResourceLimiterReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ResourceLimiterReply) GetError() *Error {
	if x, ok := m.GetResponse().(*ResourceLimiterReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ResourceLimiterReply) GetResourceLimiter() *ResourceLimiter {
	if x, ok := m.GetResponse().(*ResourceLimiterReply_ResourceLimiter); ok {
		return x.ResourceLimiter
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResourceLimiterReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResourceLimiterReply_Error)(nil),
		(*ResourceLimiterReply_ResourceLimiter)(nil),
	}
}

type GPULabelReply struct {
	// Types that are valid to be assigned to Response:
	//	*GPULabelReply_Error
	//	*GPULabelReply_Gpulabel
	Response             isGPULabelReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GPULabelReply) Reset()         { *m = GPULabelReply{} }
func (m *GPULabelReply) String() string { return proto.CompactTextString(m) }
func (*GPULabelReply) ProtoMessage()    {}
func (*GPULabelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{16}
}

func (m *GPULabelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPULabelReply.Unmarshal(m, b)
}
func (m *GPULabelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPULabelReply.Marshal(b, m, deterministic)
}
func (m *GPULabelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPULabelReply.Merge(m, src)
}
func (m *GPULabelReply) XXX_Size() int {
	return xxx_messageInfo_GPULabelReply.Size(m)
}
func (m *GPULabelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GPULabelReply.DiscardUnknown(m)
}

var xxx_messageInfo_GPULabelReply proto.InternalMessageInfo

type isGPULabelReply_Response interface {
	isGPULabelReply_Response()
}

type GPULabelReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GPULabelReply_Gpulabel struct {
	Gpulabel string `protobuf:"bytes,2,opt,name=gpulabel,proto3,oneof"`
}

func (*GPULabelReply_Error) isGPULabelReply_Response() {}

func (*GPULabelReply_Gpulabel) isGPULabelReply_Response() {}

func (m *GPULabelReply) GetResponse() isGPULabelReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GPULabelReply) GetError() *Error {
	if x, ok := m.GetResponse().(*GPULabelReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *GPULabelReply) GetGpulabel() string {
	if x, ok := m.GetResponse().(*GPULabelReply_Gpulabel); ok {
		return x.Gpulabel
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GPULabelReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GPULabelReply_Error)(nil),
		(*GPULabelReply_Gpulabel)(nil),
	}
}

type GetAvailableGPUTypesReply struct {
	AvailableGpuTypes    map[string]string `protobuf:"bytes,2,rep,name=availableGpuTypes,proto3" json:"availableGpuTypes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAvailableGPUTypesReply) Reset()         { *m = GetAvailableGPUTypesReply{} }
func (m *GetAvailableGPUTypesReply) String() string { return proto.CompactTextString(m) }
func (*GetAvailableGPUTypesReply) ProtoMessage()    {}
func (*GetAvailableGPUTypesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{17}
}

func (m *GetAvailableGPUTypesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAvailableGPUTypesReply.Unmarshal(m, b)
}
func (m *GetAvailableGPUTypesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAvailableGPUTypesReply.Marshal(b, m, deterministic)
}
func (m *GetAvailableGPUTypesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAvailableGPUTypesReply.Merge(m, src)
}
func (m *GetAvailableGPUTypesReply) XXX_Size() int {
	return xxx_messageInfo_GetAvailableGPUTypesReply.Size(m)
}
func (m *GetAvailableGPUTypesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAvailableGPUTypesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAvailableGPUTypesReply proto.InternalMessageInfo

func (m *GetAvailableGPUTypesReply) GetAvailableGpuTypes() map[string]string {
	if m != nil {
		return m.AvailableGpuTypes
	}
	return nil
}

type CleanupReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupReply) Reset()         { *m = CleanupReply{} }
func (m *CleanupReply) String() string { return proto.CompactTextString(m) }
func (*CleanupReply) ProtoMessage()    {}
func (*CleanupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{18}
}

func (m *CleanupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupReply.Unmarshal(m, b)
}
func (m *CleanupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupReply.Marshal(b, m, deterministic)
}
func (m *CleanupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupReply.Merge(m, src)
}
func (m *CleanupReply) XXX_Size() int {
	return xxx_messageInfo_CleanupReply.Size(m)
}
func (m *CleanupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupReply.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupReply proto.InternalMessageInfo

func (m *CleanupReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RefreshReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshReply) Reset()         { *m = RefreshReply{} }
func (m *RefreshReply) String() string { return proto.CompactTextString(m) }
func (*RefreshReply) ProtoMessage()    {}
func (*RefreshReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{19}
}

func (m *RefreshReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshReply.Unmarshal(m, b)
}
func (m *RefreshReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshReply.Marshal(b, m, deterministic)
}
func (m *RefreshReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshReply.Merge(m, src)
}
func (m *RefreshReply) XXX_Size() int {
	return xxx_messageInfo_RefreshReply.Size(m)
}
func (m *RefreshReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshReply.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshReply proto.InternalMessageInfo

func (m *RefreshReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type BelongsRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,2,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Node                 string   `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BelongsRequest) Reset()         { *m = BelongsRequest{} }
func (m *BelongsRequest) String() string { return proto.CompactTextString(m) }
func (*BelongsRequest) ProtoMessage()    {}
func (*BelongsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{20}
}

func (m *BelongsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BelongsRequest.Unmarshal(m, b)
}
func (m *BelongsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BelongsRequest.Marshal(b, m, deterministic)
}
func (m *BelongsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BelongsRequest.Merge(m, src)
}
func (m *BelongsRequest) XXX_Size() int {
	return xxx_messageInfo_BelongsRequest.Size(m)
}
func (m *BelongsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BelongsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BelongsRequest proto.InternalMessageInfo

func (m *BelongsRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *BelongsRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *BelongsRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type BelongsReply struct {
	// Types that are valid to be assigned to Response:
	//	*BelongsReply_Error
	//	*BelongsReply_Belongs
	Response             isBelongsReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BelongsReply) Reset()         { *m = BelongsReply{} }
func (m *BelongsReply) String() string { return proto.CompactTextString(m) }
func (*BelongsReply) ProtoMessage()    {}
func (*BelongsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{21}
}

func (m *BelongsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BelongsReply.Unmarshal(m, b)
}
func (m *BelongsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BelongsReply.Marshal(b, m, deterministic)
}
func (m *BelongsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BelongsReply.Merge(m, src)
}
func (m *BelongsReply) XXX_Size() int {
	return xxx_messageInfo_BelongsReply.Size(m)
}
func (m *BelongsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BelongsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BelongsReply proto.InternalMessageInfo

type isBelongsReply_Response interface {
	isBelongsReply_Response()
}

type BelongsReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BelongsReply_Belongs struct {
	Belongs bool `protobuf:"varint,2,opt,name=belongs,proto3,oneof"`
}

func (*BelongsReply_Error) isBelongsReply_Response() {}

func (*BelongsReply_Belongs) isBelongsReply_Response() {}

func (m *BelongsReply) GetResponse() isBelongsReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *BelongsReply) GetError() *Error {
	if x, ok := m.GetResponse().(*BelongsReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *BelongsReply) GetBelongs() bool {
	if x, ok := m.GetResponse().(*BelongsReply_Belongs); ok {
		return x.Belongs
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BelongsReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BelongsReply_Error)(nil),
		(*BelongsReply_Belongs)(nil),
	}
}

type NodeGroupServiceRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,2,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeGroupServiceRequest) Reset()         { *m = NodeGroupServiceRequest{} }
func (m *NodeGroupServiceRequest) String() string { return proto.CompactTextString(m) }
func (*NodeGroupServiceRequest) ProtoMessage()    {}
func (*NodeGroupServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{22}
}

func (m *NodeGroupServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroupServiceRequest.Unmarshal(m, b)
}
func (m *NodeGroupServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroupServiceRequest.Marshal(b, m, deterministic)
}
func (m *NodeGroupServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroupServiceRequest.Merge(m, src)
}
func (m *NodeGroupServiceRequest) XXX_Size() int {
	return xxx_messageInfo_NodeGroupServiceRequest.Size(m)
}
func (m *NodeGroupServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroupServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroupServiceRequest proto.InternalMessageInfo

func (m *NodeGroupServiceRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *NodeGroupServiceRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

type MaxSizeReply struct {
	MaxSize              int32    `protobuf:"varint,1,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxSizeReply) Reset()         { *m = MaxSizeReply{} }
func (m *MaxSizeReply) String() string { return proto.CompactTextString(m) }
func (*MaxSizeReply) ProtoMessage()    {}
func (*MaxSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{23}
}

func (m *MaxSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxSizeReply.Unmarshal(m, b)
}
func (m *MaxSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxSizeReply.Marshal(b, m, deterministic)
}
func (m *MaxSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxSizeReply.Merge(m, src)
}
func (m *MaxSizeReply) XXX_Size() int {
	return xxx_messageInfo_MaxSizeReply.Size(m)
}
func (m *MaxSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_MaxSizeReply proto.InternalMessageInfo

func (m *MaxSizeReply) GetMaxSize() int32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

type MinSizeReply struct {
	MinSize              int32    `protobuf:"varint,1,opt,name=minSize,proto3" json:"minSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinSizeReply) Reset()         { *m = MinSizeReply{} }
func (m *MinSizeReply) String() string { return proto.CompactTextString(m) }
func (*MinSizeReply) ProtoMessage()    {}
func (*MinSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{24}
}

func (m *MinSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinSizeReply.Unmarshal(m, b)
}
func (m *MinSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinSizeReply.Marshal(b, m, deterministic)
}
func (m *MinSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinSizeReply.Merge(m, src)
}
func (m *MinSizeReply) XXX_Size() int {
	return xxx_messageInfo_MinSizeReply.Size(m)
}
func (m *MinSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MinSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_MinSizeReply proto.InternalMessageInfo

func (m *MinSizeReply) GetMinSize() int32 {
	if m != nil {
		return m.MinSize
	}
	return 0
}

type TargetSizeReply struct {
	// Types that are valid to be assigned to Response:
	//	*TargetSizeReply_Error
	//	*TargetSizeReply_TargetSize
	Response             isTargetSizeReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TargetSizeReply) Reset()         { *m = TargetSizeReply{} }
func (m *TargetSizeReply) String() string { return proto.CompactTextString(m) }
func (*TargetSizeReply) ProtoMessage()    {}
func (*TargetSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{25}
}

func (m *TargetSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetSizeReply.Unmarshal(m, b)
}
func (m *TargetSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetSizeReply.Marshal(b, m, deterministic)
}
func (m *TargetSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetSizeReply.Merge(m, src)
}
func (m *TargetSizeReply) XXX_Size() int {
	return xxx_messageInfo_TargetSizeReply.Size(m)
}
func (m *TargetSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_TargetSizeReply proto.InternalMessageInfo

type isTargetSizeReply_Response interface {
	isTargetSizeReply_Response()
}

type TargetSizeReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type TargetSizeReply_TargetSize struct {
	TargetSize int32 `protobuf:"varint,2,opt,name=targetSize,proto3,oneof"`
}

func (*TargetSizeReply_Error) isTargetSizeReply_Response() {}

func (*TargetSizeReply_TargetSize) isTargetSizeReply_Response() {}

func (m *TargetSizeReply) GetResponse() isTargetSizeReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TargetSizeReply) GetError() *Error {
	if x, ok := m.GetResponse().(*TargetSizeReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *TargetSizeReply) GetTargetSize() int32 {
	if x, ok := m.GetResponse().(*TargetSizeReply_TargetSize); ok {
		return x.TargetSize
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TargetSizeReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TargetSizeReply_Error)(nil),
		(*TargetSizeReply_TargetSize)(nil),
	}
}

type IncreaseSizeRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,2,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Delta                int32    `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncreaseSizeRequest) Reset()         { *m = IncreaseSizeRequest{} }
func (m *IncreaseSizeRequest) String() string { return proto.CompactTextString(m) }
func (*IncreaseSizeRequest) ProtoMessage()    {}
func (*IncreaseSizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{26}
}

func (m *IncreaseSizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncreaseSizeRequest.Unmarshal(m, b)
}
func (m *IncreaseSizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncreaseSizeRequest.Marshal(b, m, deterministic)
}
func (m *IncreaseSizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncreaseSizeRequest.Merge(m, src)
}
func (m *IncreaseSizeRequest) XXX_Size() int {
	return xxx_messageInfo_IncreaseSizeRequest.Size(m)
}
func (m *IncreaseSizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncreaseSizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncreaseSizeRequest proto.InternalMessageInfo

func (m *IncreaseSizeRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *IncreaseSizeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *IncreaseSizeRequest) GetDelta() int32 {
	if m != nil {
		return m.Delta
	}
	return 0
}

type IncreaseSizeReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncreaseSizeReply) Reset()         { *m = IncreaseSizeReply{} }
func (m *IncreaseSizeReply) String() string { return proto.CompactTextString(m) }
func (*IncreaseSizeReply) ProtoMessage()    {}
func (*IncreaseSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{27}
}

func (m *IncreaseSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncreaseSizeReply.Unmarshal(m, b)
}
func (m *IncreaseSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncreaseSizeReply.Marshal(b, m, deterministic)
}
func (m *IncreaseSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncreaseSizeReply.Merge(m, src)
}
func (m *IncreaseSizeReply) XXX_Size() int {
	return xxx_messageInfo_IncreaseSizeReply.Size(m)
}
func (m *IncreaseSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IncreaseSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_IncreaseSizeReply proto.InternalMessageInfo

func (m *IncreaseSizeReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteNodesRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,2,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Node                 []string `protobuf:"bytes,3,rep,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodesRequest) Reset()         { *m = DeleteNodesRequest{} }
func (m *DeleteNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesRequest) ProtoMessage()    {}
func (*DeleteNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{28}
}

func (m *DeleteNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesRequest.Unmarshal(m, b)
}
func (m *DeleteNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesRequest.Merge(m, src)
}
func (m *DeleteNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesRequest.Size(m)
}
func (m *DeleteNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesRequest proto.InternalMessageInfo

func (m *DeleteNodesRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *DeleteNodesRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *DeleteNodesRequest) GetNode() []string {
	if m != nil {
		return m.Node
	}
	return nil
}

type DeleteNodesReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodesReply) Reset()         { *m = DeleteNodesReply{} }
func (m *DeleteNodesReply) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesReply) ProtoMessage()    {}
func (*DeleteNodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{29}
}

func (m *DeleteNodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesReply.Unmarshal(m, b)
}
func (m *DeleteNodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesReply.Marshal(b, m, deterministic)
}
func (m *DeleteNodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesReply.Merge(m, src)
}
func (m *DeleteNodesReply) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesReply.Size(m)
}
func (m *DeleteNodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesReply proto.InternalMessageInfo

func (m *DeleteNodesReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type DecreaseTargetSizeRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	NodeGroupID          string   `protobuf:"bytes,2,opt,name=nodeGroupID,proto3" json:"nodeGroupID,omitempty"`
	Delta                int32    `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecreaseTargetSizeRequest) Reset()         { *m = DecreaseTargetSizeRequest{} }
func (m *DecreaseTargetSizeRequest) String() string { return proto.CompactTextString(m) }
func (*DecreaseTargetSizeRequest) ProtoMessage()    {}
func (*DecreaseTargetSizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{30}
}

func (m *DecreaseTargetSizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecreaseTargetSizeRequest.Unmarshal(m, b)
}
func (m *DecreaseTargetSizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecreaseTargetSizeRequest.Marshal(b, m, deterministic)
}
func (m *DecreaseTargetSizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecreaseTargetSizeRequest.Merge(m, src)
}
func (m *DecreaseTargetSizeRequest) XXX_Size() int {
	return xxx_messageInfo_DecreaseTargetSizeRequest.Size(m)
}
func (m *DecreaseTargetSizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecreaseTargetSizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecreaseTargetSizeRequest proto.InternalMessageInfo

func (m *DecreaseTargetSizeRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *DecreaseTargetSizeRequest) GetNodeGroupID() string {
	if m != nil {
		return m.NodeGroupID
	}
	return ""
}

func (m *DecreaseTargetSizeRequest) GetDelta() int32 {
	if m != nil {
		return m.Delta
	}
	return 0
}

type DecreaseTargetSizeReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecreaseTargetSizeReply) Reset()         { *m = DecreaseTargetSizeReply{} }
func (m *DecreaseTargetSizeReply) String() string { return proto.CompactTextString(m) }
func (*DecreaseTargetSizeReply) ProtoMessage()    {}
func (*DecreaseTargetSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{31}
}

func (m *DecreaseTargetSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecreaseTargetSizeReply.Unmarshal(m, b)
}
func (m *DecreaseTargetSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecreaseTargetSizeReply.Marshal(b, m, deterministic)
}
func (m *DecreaseTargetSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecreaseTargetSizeReply.Merge(m, src)
}
func (m *DecreaseTargetSizeReply) XXX_Size() int {
	return xxx_messageInfo_DecreaseTargetSizeReply.Size(m)
}
func (m *DecreaseTargetSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DecreaseTargetSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DecreaseTargetSizeReply proto.InternalMessageInfo

func (m *DecreaseTargetSizeReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type IdReply struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdReply) Reset()         { *m = IdReply{} }
func (m *IdReply) String() string { return proto.CompactTextString(m) }
func (*IdReply) ProtoMessage()    {}
func (*IdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{32}
}

func (m *IdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdReply.Unmarshal(m, b)
}
func (m *IdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdReply.Marshal(b, m, deterministic)
}
func (m *IdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdReply.Merge(m, src)
}
func (m *IdReply) XXX_Size() int {
	return xxx_messageInfo_IdReply.Size(m)
}
func (m *IdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IdReply.DiscardUnknown(m)
}

var xxx_messageInfo_IdReply proto.InternalMessageInfo

func (m *IdReply) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type DebugReply struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugReply) Reset()         { *m = DebugReply{} }
func (m *DebugReply) String() string { return proto.CompactTextString(m) }
func (*DebugReply) ProtoMessage()    {}
func (*DebugReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{33}
}

func (m *DebugReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugReply.Unmarshal(m, b)
}
func (m *DebugReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugReply.Marshal(b, m, deterministic)
}
func (m *DebugReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugReply.Merge(m, src)
}
func (m *DebugReply) XXX_Size() int {
	return xxx_messageInfo_DebugReply.Size(m)
}
func (m *DebugReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugReply.DiscardUnknown(m)
}

var xxx_messageInfo_DebugReply proto.InternalMessageInfo

func (m *DebugReply) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Instances struct {
	Items                []*Instance `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Instances) Reset()         { *m = Instances{} }
func (m *Instances) String() string { return proto.CompactTextString(m) }
func (*Instances) ProtoMessage()    {}
func (*Instances) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{34}
}

func (m *Instances) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instances.Unmarshal(m, b)
}
func (m *Instances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instances.Marshal(b, m, deterministic)
}
func (m *Instances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instances.Merge(m, src)
}
func (m *Instances) XXX_Size() int {
	return xxx_messageInfo_Instances.Size(m)
}
func (m *Instances) XXX_DiscardUnknown() {
	xxx_messageInfo_Instances.DiscardUnknown(m)
}

var xxx_messageInfo_Instances proto.InternalMessageInfo

func (m *Instances) GetItems() []*Instance {
	if m != nil {
		return m.Items
	}
	return nil
}

type NodesReply struct {
	// Types that are valid to be assigned to Response:
	//	*NodesReply_Error
	//	*NodesReply_Instances
	Response             isNodesReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NodesReply) Reset()         { *m = NodesReply{} }
func (m *NodesReply) String() string { return proto.CompactTextString(m) }
func (*NodesReply) ProtoMessage()    {}
func (*NodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{35}
}

func (m *NodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesReply.Unmarshal(m, b)
}
func (m *NodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesReply.Marshal(b, m, deterministic)
}
func (m *NodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesReply.Merge(m, src)
}
func (m *NodesReply) XXX_Size() int {
	return xxx_messageInfo_NodesReply.Size(m)
}
func (m *NodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodesReply proto.InternalMessageInfo

type isNodesReply_Response interface {
	isNodesReply_Response()
}

type NodesReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type NodesReply_Instances struct {
	Instances *Instances `protobuf:"bytes,2,opt,name=instances,proto3,oneof"`
}

func (*NodesReply_Error) isNodesReply_Response() {}

func (*NodesReply_Instances) isNodesReply_Response() {}

func (m *NodesReply) GetResponse() isNodesReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *NodesReply) GetError() *Error {
	if x, ok := m.GetResponse().(*NodesReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *NodesReply) GetInstances() *Instances {
	if x, ok := m.GetResponse().(*NodesReply_Instances); ok {
		return x.Instances
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NodesReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NodesReply_Error)(nil),
		(*NodesReply_Instances)(nil),
	}
}

type ImageStateSummary struct {
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	NumNodes             int32    `protobuf:"varint,2,opt,name=numNodes,proto3" json:"numNodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageStateSummary) Reset()         { *m = ImageStateSummary{} }
func (m *ImageStateSummary) String() string { return proto.CompactTextString(m) }
func (*ImageStateSummary) ProtoMessage()    {}
func (*ImageStateSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{36}
}

func (m *ImageStateSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStateSummary.Unmarshal(m, b)
}
func (m *ImageStateSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStateSummary.Marshal(b, m, deterministic)
}
func (m *ImageStateSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStateSummary.Merge(m, src)
}
func (m *ImageStateSummary) XXX_Size() int {
	return xxx_messageInfo_ImageStateSummary.Size(m)
}
func (m *ImageStateSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStateSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStateSummary proto.InternalMessageInfo

func (m *ImageStateSummary) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ImageStateSummary) GetNumNodes() int32 {
	if m != nil {
		return m.NumNodes
	}
	return 0
}

type Resource struct {
	MilliCPU         int64 `protobuf:"varint,1,opt,name=milliCPU,proto3" json:"milliCPU,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	EphemeralStorage int64 `protobuf:"varint,3,opt,name=ephemeralStorage,proto3" json:"ephemeralStorage,omitempty"`
	// We store allowedPodNumber (which is Node.Status.Allocatable.Pods().Value())
	// explicitly as int, to avoid conversions and improve performance.
	AllowedPodNumber int32 `protobuf:"varint,4,opt,name=allowedPodNumber,proto3" json:"allowedPodNumber,omitempty"`
	// ScalarResources
	ScalarResources      map[string]int64 `protobuf:"bytes,5,rep,name=scalarResources,proto3" json:"scalarResources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{37}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetMilliCPU() int64 {
	if m != nil {
		return m.MilliCPU
	}
	return 0
}

func (m *Resource) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Resource) GetEphemeralStorage() int64 {
	if m != nil {
		return m.EphemeralStorage
	}
	return 0
}

func (m *Resource) GetAllowedPodNumber() int32 {
	if m != nil {
		return m.AllowedPodNumber
	}
	return 0
}

func (m *Resource) GetScalarResources() map[string]int64 {
	if m != nil {
		return m.ScalarResources
	}
	return nil
}

type TransientSchedulerInfo struct {
	AllocatableVolumesCount int32    `protobuf:"varint,1,opt,name=allocatableVolumesCount,proto3" json:"allocatableVolumesCount,omitempty"`
	RequestedVolumes        int32    `protobuf:"varint,2,opt,name=requestedVolumes,proto3" json:"requestedVolumes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *TransientSchedulerInfo) Reset()         { *m = TransientSchedulerInfo{} }
func (m *TransientSchedulerInfo) String() string { return proto.CompactTextString(m) }
func (*TransientSchedulerInfo) ProtoMessage()    {}
func (*TransientSchedulerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{38}
}

func (m *TransientSchedulerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransientSchedulerInfo.Unmarshal(m, b)
}
func (m *TransientSchedulerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransientSchedulerInfo.Marshal(b, m, deterministic)
}
func (m *TransientSchedulerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransientSchedulerInfo.Merge(m, src)
}
func (m *TransientSchedulerInfo) XXX_Size() int {
	return xxx_messageInfo_TransientSchedulerInfo.Size(m)
}
func (m *TransientSchedulerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TransientSchedulerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TransientSchedulerInfo proto.InternalMessageInfo

func (m *TransientSchedulerInfo) GetAllocatableVolumesCount() int32 {
	if m != nil {
		return m.AllocatableVolumesCount
	}
	return 0
}

func (m *TransientSchedulerInfo) GetRequestedVolumes() int32 {
	if m != nil {
		return m.RequestedVolumes
	}
	return 0
}

type ProtocolPort struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtocolPort) Reset()         { *m = ProtocolPort{} }
func (m *ProtocolPort) String() string { return proto.CompactTextString(m) }
func (*ProtocolPort) ProtoMessage()    {}
func (*ProtocolPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{39}
}

func (m *ProtocolPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolPort.Unmarshal(m, b)
}
func (m *ProtocolPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolPort.Marshal(b, m, deterministic)
}
func (m *ProtocolPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolPort.Merge(m, src)
}
func (m *ProtocolPort) XXX_Size() int {
	return xxx_messageInfo_ProtocolPort.Size(m)
}
func (m *ProtocolPort) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolPort.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolPort proto.InternalMessageInfo

func (m *ProtocolPort) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *ProtocolPort) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type HostPortInfo struct {
	HostPortInfo         map[string]*ProtocolPort `protobuf:"bytes,1,rep,name=hostPortInfo,proto3" json:"hostPortInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *HostPortInfo) Reset()         { *m = HostPortInfo{} }
func (m *HostPortInfo) String() string { return proto.CompactTextString(m) }
func (*HostPortInfo) ProtoMessage()    {}
func (*HostPortInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{40}
}

func (m *HostPortInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostPortInfo.Unmarshal(m, b)
}
func (m *HostPortInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostPortInfo.Marshal(b, m, deterministic)
}
func (m *HostPortInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostPortInfo.Merge(m, src)
}
func (m *HostPortInfo) XXX_Size() int {
	return xxx_messageInfo_HostPortInfo.Size(m)
}
func (m *HostPortInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HostPortInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HostPortInfo proto.InternalMessageInfo

func (m *HostPortInfo) GetHostPortInfo() map[string]*ProtocolPort {
	if m != nil {
		return m.HostPortInfo
	}
	return nil
}

type NodeInfo struct {
	Node                 string                        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Pods                 []string                      `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty"`
	UsedPorts            *HostPortInfo                 `protobuf:"bytes,3,opt,name=usedPorts,proto3" json:"usedPorts,omitempty"`
	RequestedResource    *Resource                     `protobuf:"bytes,4,opt,name=requestedResource,proto3" json:"requestedResource,omitempty"`
	NonzeroRequest       *Resource                     `protobuf:"bytes,5,opt,name=nonzeroRequest,proto3" json:"nonzeroRequest,omitempty"`
	ImageStates          map[string]*ImageStateSummary `protobuf:"bytes,6,rep,name=imageStates,proto3" json:"imageStates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TransientInfo        *TransientSchedulerInfo       `protobuf:"bytes,7,opt,name=TransientInfo,proto3" json:"TransientInfo,omitempty"`
	Generation           int64                         `protobuf:"varint,8,opt,name=generation,proto3" json:"generation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{41}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodeInfo) GetPods() []string {
	if m != nil {
		return m.Pods
	}
	return nil
}

func (m *NodeInfo) GetUsedPorts() *HostPortInfo {
	if m != nil {
		return m.UsedPorts
	}
	return nil
}

func (m *NodeInfo) GetRequestedResource() *Resource {
	if m != nil {
		return m.RequestedResource
	}
	return nil
}

func (m *NodeInfo) GetNonzeroRequest() *Resource {
	if m != nil {
		return m.NonzeroRequest
	}
	return nil
}

func (m *NodeInfo) GetImageStates() map[string]*ImageStateSummary {
	if m != nil {
		return m.ImageStates
	}
	return nil
}

func (m *NodeInfo) GetTransientInfo() *TransientSchedulerInfo {
	if m != nil {
		return m.TransientInfo
	}
	return nil
}

func (m *NodeInfo) GetGeneration() int64 {
	if m != nil {
		return m.Generation
	}
	return 0
}

type TemplateNodeInfoReply struct {
	// Types that are valid to be assigned to Response:
	//	*TemplateNodeInfoReply_Error
	//	*TemplateNodeInfoReply_NodeInfo
	Response             isTemplateNodeInfoReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *TemplateNodeInfoReply) Reset()         { *m = TemplateNodeInfoReply{} }
func (m *TemplateNodeInfoReply) String() string { return proto.CompactTextString(m) }
func (*TemplateNodeInfoReply) ProtoMessage()    {}
func (*TemplateNodeInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{42}
}

func (m *TemplateNodeInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateNodeInfoReply.Unmarshal(m, b)
}
func (m *TemplateNodeInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateNodeInfoReply.Marshal(b, m, deterministic)
}
func (m *TemplateNodeInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateNodeInfoReply.Merge(m, src)
}
func (m *TemplateNodeInfoReply) XXX_Size() int {
	return xxx_messageInfo_TemplateNodeInfoReply.Size(m)
}
func (m *TemplateNodeInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateNodeInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateNodeInfoReply proto.InternalMessageInfo

type isTemplateNodeInfoReply_Response interface {
	isTemplateNodeInfoReply_Response()
}

type TemplateNodeInfoReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type TemplateNodeInfoReply_NodeInfo struct {
	NodeInfo *NodeInfo `protobuf:"bytes,2,opt,name=nodeInfo,proto3,oneof"`
}

func (*TemplateNodeInfoReply_Error) isTemplateNodeInfoReply_Response() {}

func (*TemplateNodeInfoReply_NodeInfo) isTemplateNodeInfoReply_Response() {}

func (m *TemplateNodeInfoReply) GetResponse() isTemplateNodeInfoReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TemplateNodeInfoReply) GetError() *Error {
	if x, ok := m.GetResponse().(*TemplateNodeInfoReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *TemplateNodeInfoReply) GetNodeInfo() *NodeInfo {
	if x, ok := m.GetResponse().(*TemplateNodeInfoReply_NodeInfo); ok {
		return x.NodeInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TemplateNodeInfoReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TemplateNodeInfoReply_Error)(nil),
		(*TemplateNodeInfoReply_NodeInfo)(nil),
	}
}

type ExistReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistReply) Reset()         { *m = ExistReply{} }
func (m *ExistReply) String() string { return proto.CompactTextString(m) }
func (*ExistReply) ProtoMessage()    {}
func (*ExistReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{43}
}

func (m *ExistReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistReply.Unmarshal(m, b)
}
func (m *ExistReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistReply.Marshal(b, m, deterministic)
}
func (m *ExistReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistReply.Merge(m, src)
}
func (m *ExistReply) XXX_Size() int {
	return xxx_messageInfo_ExistReply.Size(m)
}
func (m *ExistReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistReply.DiscardUnknown(m)
}

var xxx_messageInfo_ExistReply proto.InternalMessageInfo

func (m *ExistReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type CreateReply struct {
	// Types that are valid to be assigned to Response:
	//	*CreateReply_Error
	//	*CreateReply_NodeGroup
	Response             isCreateReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateReply) Reset()         { *m = CreateReply{} }
func (m *CreateReply) String() string { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()    {}
func (*CreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{44}
}

func (m *CreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReply.Unmarshal(m, b)
}
func (m *CreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReply.Marshal(b, m, deterministic)
}
func (m *CreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReply.Merge(m, src)
}
func (m *CreateReply) XXX_Size() int {
	return xxx_messageInfo_CreateReply.Size(m)
}
func (m *CreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReply proto.InternalMessageInfo

type isCreateReply_Response interface {
	isCreateReply_Response()
}

type CreateReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateReply_NodeGroup struct {
	NodeGroup *NodeGroup `protobuf:"bytes,2,opt,name=nodeGroup,proto3,oneof"`
}

func (*CreateReply_Error) isCreateReply_Response() {}

func (*CreateReply_NodeGroup) isCreateReply_Response() {}

func (m *CreateReply) GetResponse() isCreateReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *CreateReply) GetError() *Error {
	if x, ok := m.GetResponse().(*CreateReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *CreateReply) GetNodeGroup() *NodeGroup {
	if x, ok := m.GetResponse().(*CreateReply_NodeGroup); ok {
		return x.NodeGroup
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateReply_Error)(nil),
		(*CreateReply_NodeGroup)(nil),
	}
}

type DeleteReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{45}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

func (m *DeleteReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type AutoprovisionedReply struct {
	Autoprovisioned      bool     `protobuf:"varint,1,opt,name=autoprovisioned,proto3" json:"autoprovisioned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoprovisionedReply) Reset()         { *m = AutoprovisionedReply{} }
func (m *AutoprovisionedReply) String() string { return proto.CompactTextString(m) }
func (*AutoprovisionedReply) ProtoMessage()    {}
func (*AutoprovisionedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{46}
}

func (m *AutoprovisionedReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoprovisionedReply.Unmarshal(m, b)
}
func (m *AutoprovisionedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoprovisionedReply.Marshal(b, m, deterministic)
}
func (m *AutoprovisionedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoprovisionedReply.Merge(m, src)
}
func (m *AutoprovisionedReply) XXX_Size() int {
	return xxx_messageInfo_AutoprovisionedReply.Size(m)
}
func (m *AutoprovisionedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoprovisionedReply.DiscardUnknown(m)
}

var xxx_messageInfo_AutoprovisionedReply proto.InternalMessageInfo

func (m *AutoprovisionedReply) GetAutoprovisioned() bool {
	if m != nil {
		return m.Autoprovisioned
	}
	return false
}

type NodePriceRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePriceRequest) Reset()         { *m = NodePriceRequest{} }
func (m *NodePriceRequest) String() string { return proto.CompactTextString(m) }
func (*NodePriceRequest) ProtoMessage()    {}
func (*NodePriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{47}
}

func (m *NodePriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePriceRequest.Unmarshal(m, b)
}
func (m *NodePriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePriceRequest.Marshal(b, m, deterministic)
}
func (m *NodePriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePriceRequest.Merge(m, src)
}
func (m *NodePriceRequest) XXX_Size() int {
	return xxx_messageInfo_NodePriceRequest.Size(m)
}
func (m *NodePriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodePriceRequest proto.InternalMessageInfo

func (m *NodePriceRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *NodePriceRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodePriceRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *NodePriceRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type NodePriceReply struct {
	// Types that are valid to be assigned to Response:
	//	*NodePriceReply_Error
	//	*NodePriceReply_Price
	Response             isNodePriceReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *NodePriceReply) Reset()         { *m = NodePriceReply{} }
func (m *NodePriceReply) String() string { return proto.CompactTextString(m) }
func (*NodePriceReply) ProtoMessage()    {}
func (*NodePriceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{48}
}

func (m *NodePriceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePriceReply.Unmarshal(m, b)
}
func (m *NodePriceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePriceReply.Marshal(b, m, deterministic)
}
func (m *NodePriceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePriceReply.Merge(m, src)
}
func (m *NodePriceReply) XXX_Size() int {
	return xxx_messageInfo_NodePriceReply.Size(m)
}
func (m *NodePriceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePriceReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodePriceReply proto.InternalMessageInfo

type isNodePriceReply_Response interface {
	isNodePriceReply_Response()
}

type NodePriceReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type NodePriceReply_Price struct {
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3,oneof"`
}

func (*NodePriceReply_Error) isNodePriceReply_Response() {}

func (*NodePriceReply_Price) isNodePriceReply_Response() {}

func (m *NodePriceReply) GetResponse() isNodePriceReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *NodePriceReply) GetError() *Error {
	if x, ok := m.GetResponse().(*NodePriceReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *NodePriceReply) GetPrice() float64 {
	if x, ok := m.GetResponse().(*NodePriceReply_Price); ok {
		return x.Price
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NodePriceReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NodePriceReply_Error)(nil),
		(*NodePriceReply_Price)(nil),
	}
}

type PodPriceRequest struct {
	ProviderID           string   `protobuf:"bytes,1,opt,name=providerID,proto3" json:"providerID,omitempty"`
	Pod                  string   `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodPriceRequest) Reset()         { *m = PodPriceRequest{} }
func (m *PodPriceRequest) String() string { return proto.CompactTextString(m) }
func (*PodPriceRequest) ProtoMessage()    {}
func (*PodPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{49}
}

func (m *PodPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodPriceRequest.Unmarshal(m, b)
}
func (m *PodPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodPriceRequest.Marshal(b, m, deterministic)
}
func (m *PodPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodPriceRequest.Merge(m, src)
}
func (m *PodPriceRequest) XXX_Size() int {
	return xxx_messageInfo_PodPriceRequest.Size(m)
}
func (m *PodPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PodPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PodPriceRequest proto.InternalMessageInfo

func (m *PodPriceRequest) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *PodPriceRequest) GetPod() string {
	if m != nil {
		return m.Pod
	}
	return ""
}

func (m *PodPriceRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PodPriceRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type PodPriceReply struct {
	// Types that are valid to be assigned to Response:
	//	*PodPriceReply_Error
	//	*PodPriceReply_Price
	Response             isPodPriceReply_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PodPriceReply) Reset()         { *m = PodPriceReply{} }
func (m *PodPriceReply) String() string { return proto.CompactTextString(m) }
func (*PodPriceReply) ProtoMessage()    {}
func (*PodPriceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{50}
}

func (m *PodPriceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodPriceReply.Unmarshal(m, b)
}
func (m *PodPriceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodPriceReply.Marshal(b, m, deterministic)
}
func (m *PodPriceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodPriceReply.Merge(m, src)
}
func (m *PodPriceReply) XXX_Size() int {
	return xxx_messageInfo_PodPriceReply.Size(m)
}
func (m *PodPriceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PodPriceReply.DiscardUnknown(m)
}

var xxx_messageInfo_PodPriceReply proto.InternalMessageInfo

type isPodPriceReply_Response interface {
	isPodPriceReply_Response()
}

type PodPriceReply_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type PodPriceReply_Price struct {
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3,oneof"`
}

func (*PodPriceReply_Error) isPodPriceReply_Response() {}

func (*PodPriceReply_Price) isPodPriceReply_Response() {}

func (m *PodPriceReply) GetResponse() isPodPriceReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *PodPriceReply) GetError() *Error {
	if x, ok := m.GetResponse().(*PodPriceReply_Error); ok {
		return x.Error
	}
	return nil
}

func (m *PodPriceReply) GetPrice() float64 {
	if x, ok := m.GetResponse().(*PodPriceReply_Price); ok {
		return x.Price
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PodPriceReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PodPriceReply_Error)(nil),
		(*PodPriceReply_Price)(nil),
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// General messages types
/////////////////////////////////////////////////////////////////////////////////////////////////////////
type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{51}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type NodeGroup struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeGroup) Reset()         { *m = NodeGroup{} }
func (m *NodeGroup) String() string { return proto.CompactTextString(m) }
func (*NodeGroup) ProtoMessage()    {}
func (*NodeGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{52}
}

func (m *NodeGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGroup.Unmarshal(m, b)
}
func (m *NodeGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGroup.Marshal(b, m, deterministic)
}
func (m *NodeGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGroup.Merge(m, src)
}
func (m *NodeGroup) XXX_Size() int {
	return xxx_messageInfo_NodeGroup.Size(m)
}
func (m *NodeGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGroup.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGroup proto.InternalMessageInfo

func (m *NodeGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PricingModel struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PricingModel) Reset()         { *m = PricingModel{} }
func (m *PricingModel) String() string { return proto.CompactTextString(m) }
func (*PricingModel) ProtoMessage()    {}
func (*PricingModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{53}
}

func (m *PricingModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PricingModel.Unmarshal(m, b)
}
func (m *PricingModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PricingModel.Marshal(b, m, deterministic)
}
func (m *PricingModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PricingModel.Merge(m, src)
}
func (m *PricingModel) XXX_Size() int {
	return xxx_messageInfo_PricingModel.Size(m)
}
func (m *PricingModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PricingModel.DiscardUnknown(m)
}

var xxx_messageInfo_PricingModel proto.InternalMessageInfo

func (m *PricingModel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ResourceLimiter struct {
	MinLimits            map[string]int64 `protobuf:"bytes,1,rep,name=minLimits,proto3" json:"minLimits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MaxLimits            map[string]int64 `protobuf:"bytes,2,rep,name=maxLimits,proto3" json:"maxLimits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResourceLimiter) Reset()         { *m = ResourceLimiter{} }
func (m *ResourceLimiter) String() string { return proto.CompactTextString(m) }
func (*ResourceLimiter) ProtoMessage()    {}
func (*ResourceLimiter) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{54}
}

func (m *ResourceLimiter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceLimiter.Unmarshal(m, b)
}
func (m *ResourceLimiter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceLimiter.Marshal(b, m, deterministic)
}
func (m *ResourceLimiter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLimiter.Merge(m, src)
}
func (m *ResourceLimiter) XXX_Size() int {
	return xxx_messageInfo_ResourceLimiter.Size(m)
}
func (m *ResourceLimiter) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLimiter.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLimiter proto.InternalMessageInfo

func (m *ResourceLimiter) GetMinLimits() map[string]int64 {
	if m != nil {
		return m.MinLimits
	}
	return nil
}

func (m *ResourceLimiter) GetMaxLimits() map[string]int64 {
	if m != nil {
		return m.MaxLimits
	}
	return nil
}

type InstanceErrorInfo struct {
	ErrorClass InstanceErrorClass `protobuf:"varint,1,opt,name=errorClass,proto3,enum=grpccloudprovider.InstanceErrorClass" json:"errorClass,omitempty"`
	// ErrorCode is cloud-provider specific error code for error condition
	ErrorCode string `protobuf:"bytes,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// ErrorMessage is human readable description of error condition
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceErrorInfo) Reset()         { *m = InstanceErrorInfo{} }
func (m *InstanceErrorInfo) String() string { return proto.CompactTextString(m) }
func (*InstanceErrorInfo) ProtoMessage()    {}
func (*InstanceErrorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{55}
}

func (m *InstanceErrorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceErrorInfo.Unmarshal(m, b)
}
func (m *InstanceErrorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceErrorInfo.Marshal(b, m, deterministic)
}
func (m *InstanceErrorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceErrorInfo.Merge(m, src)
}
func (m *InstanceErrorInfo) XXX_Size() int {
	return xxx_messageInfo_InstanceErrorInfo.Size(m)
}
func (m *InstanceErrorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceErrorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceErrorInfo proto.InternalMessageInfo

func (m *InstanceErrorInfo) GetErrorClass() InstanceErrorClass {
	if m != nil {
		return m.ErrorClass
	}
	return InstanceErrorClass_ERROR_UNDEFINED
}

func (m *InstanceErrorInfo) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *InstanceErrorInfo) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type InstanceStatus struct {
	State                InstanceState      `protobuf:"varint,1,opt,name=state,proto3,enum=grpccloudprovider.InstanceState" json:"state,omitempty"`
	ErrorInfo            *InstanceErrorInfo `protobuf:"bytes,2,opt,name=errorInfo,proto3" json:"errorInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *InstanceStatus) Reset()         { *m = InstanceStatus{} }
func (m *InstanceStatus) String() string { return proto.CompactTextString(m) }
func (*InstanceStatus) ProtoMessage()    {}
func (*InstanceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{56}
}

func (m *InstanceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceStatus.Unmarshal(m, b)
}
func (m *InstanceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceStatus.Marshal(b, m, deterministic)
}
func (m *InstanceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceStatus.Merge(m, src)
}
func (m *InstanceStatus) XXX_Size() int {
	return xxx_messageInfo_InstanceStatus.Size(m)
}
func (m *InstanceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceStatus proto.InternalMessageInfo

func (m *InstanceStatus) GetState() InstanceState {
	if m != nil {
		return m.State
	}
	return InstanceState_STATE_UNDEFINED
}

func (m *InstanceStatus) GetErrorInfo() *InstanceErrorInfo {
	if m != nil {
		return m.ErrorInfo
	}
	return nil
}

type Instance struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               *InstanceStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd5c15e2a0166865, []int{57}
}

func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetStatus() *InstanceStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("grpccloudprovider.InstanceErrorClass", InstanceErrorClass_name, InstanceErrorClass_value)
	proto.RegisterEnum("grpccloudprovider.InstanceState", InstanceState_name, InstanceState_value)
	proto.RegisterType((*CloudProviderServiceRequest)(nil), "grpccloudprovider.CloudProviderServiceRequest")
	proto.RegisterType((*KubeAdmConfig)(nil), "grpccloudprovider.KubeAdmConfig")
	proto.RegisterType((*NodeGroupDef)(nil), "grpccloudprovider.NodeGroupDef")
	proto.RegisterMapType((map[string]string)(nil), "grpccloudprovider.NodeGroupDef.LabelsEntry")
	proto.RegisterType((*ConnectRequest)(nil), "grpccloudprovider.ConnectRequest")
	proto.RegisterType((*ConnectReply)(nil), "grpccloudprovider.ConnectReply")
	proto.RegisterType((*NameReply)(nil), "grpccloudprovider.NameReply")
	proto.RegisterType((*NodeGroupsReply)(nil), "grpccloudprovider.NodeGroupsReply")
	proto.RegisterType((*NodeGroupForNodeRequest)(nil), "grpccloudprovider.NodeGroupForNodeRequest")
	proto.RegisterType((*NodeGroupes)(nil), "grpccloudprovider.NodeGroupes")
	proto.RegisterType((*NodeGroupForNodeReply)(nil), "grpccloudprovider.NodeGroupForNodeReply")
	proto.RegisterType((*PricingModelReply)(nil), "grpccloudprovider.PricingModelReply")
	proto.RegisterType((*AvailableMachineTypes)(nil), "grpccloudprovider.AvailableMachineTypes")
	proto.RegisterType((*AvailableMachineTypesReply)(nil), "grpccloudprovider.AvailableMachineTypesReply")
	proto.RegisterType((*NewNodeGroupRequest)(nil), "grpccloudprovider.NewNodeGroupRequest")
	proto.RegisterMapType((map[string]string)(nil), "grpccloudprovider.NewNodeGroupRequest.ExtraResourcesEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpccloudprovider.NewNodeGroupRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpccloudprovider.NewNodeGroupRequest.SystemLabelsEntry")
	proto.RegisterType((*NewNodeGroupReply)(nil), "grpccloudprovider.NewNodeGroupReply")
	proto.RegisterType((*ResourceLimiterReply)(nil), "grpccloudprovider.ResourceLimiterReply")
	proto.RegisterType((*GPULabelReply)(nil), "grpccloudprovider.GPULabelReply")
	proto.RegisterType((*GetAvailableGPUTypesReply)(nil), "grpccloudprovider.GetAvailableGPUTypesReply")
	proto.RegisterMapType((map[string]string)(nil), "grpccloudprovider.GetAvailableGPUTypesReply.AvailableGpuTypesEntry")
	proto.RegisterType((*CleanupReply)(nil), "grpccloudprovider.CleanupReply")
	proto.RegisterType((*RefreshReply)(nil), "grpccloudprovider.RefreshReply")
	proto.RegisterType((*BelongsRequest)(nil), "grpccloudprovider.BelongsRequest")
	proto.RegisterType((*BelongsReply)(nil), "grpccloudprovider.BelongsReply")
	proto.RegisterType((*NodeGroupServiceRequest)(nil), "grpccloudprovider.NodeGroupServiceRequest")
	proto.RegisterType((*MaxSizeReply)(nil), "grpccloudprovider.MaxSizeReply")
	proto.RegisterType((*MinSizeReply)(nil), "grpccloudprovider.MinSizeReply")
	proto.RegisterType((*TargetSizeReply)(nil), "grpccloudprovider.TargetSizeReply")
	proto.RegisterType((*IncreaseSizeRequest)(nil), "grpccloudprovider.IncreaseSizeRequest")
	proto.RegisterType((*IncreaseSizeReply)(nil), "grpccloudprovider.IncreaseSizeReply")
	proto.RegisterType((*DeleteNodesRequest)(nil), "grpccloudprovider.DeleteNodesRequest")
	proto.RegisterType((*DeleteNodesReply)(nil), "grpccloudprovider.DeleteNodesReply")
	proto.RegisterType((*DecreaseTargetSizeRequest)(nil), "grpccloudprovider.DecreaseTargetSizeRequest")
	proto.RegisterType((*DecreaseTargetSizeReply)(nil), "grpccloudprovider.DecreaseTargetSizeReply")
	proto.RegisterType((*IdReply)(nil), "grpccloudprovider.IdReply")
	proto.RegisterType((*DebugReply)(nil), "grpccloudprovider.DebugReply")
	proto.RegisterType((*Instances)(nil), "grpccloudprovider.Instances")
	proto.RegisterType((*NodesReply)(nil), "grpccloudprovider.NodesReply")
	proto.RegisterType((*ImageStateSummary)(nil), "grpccloudprovider.ImageStateSummary")
	proto.RegisterType((*Resource)(nil), "grpccloudprovider.Resource")
	proto.RegisterMapType((map[string]int64)(nil), "grpccloudprovider.Resource.ScalarResourcesEntry")
	proto.RegisterType((*TransientSchedulerInfo)(nil), "grpccloudprovider.TransientSchedulerInfo")
	proto.RegisterType((*ProtocolPort)(nil), "grpccloudprovider.ProtocolPort")
	proto.RegisterType((*HostPortInfo)(nil), "grpccloudprovider.HostPortInfo")
	proto.RegisterMapType((map[string]*ProtocolPort)(nil), "grpccloudprovider.HostPortInfo.HostPortInfoEntry")
	proto.RegisterType((*NodeInfo)(nil), "grpccloudprovider.NodeInfo")
	proto.RegisterMapType((map[string]*ImageStateSummary)(nil), "grpccloudprovider.NodeInfo.ImageStatesEntry")
	proto.RegisterType((*TemplateNodeInfoReply)(nil), "grpccloudprovider.TemplateNodeInfoReply")
	proto.RegisterType((*ExistReply)(nil), "grpccloudprovider.ExistReply")
	proto.RegisterType((*CreateReply)(nil), "grpccloudprovider.CreateReply")
	proto.RegisterType((*DeleteReply)(nil), "grpccloudprovider.DeleteReply")
	proto.RegisterType((*AutoprovisionedReply)(nil), "grpccloudprovider.AutoprovisionedReply")
	proto.RegisterType((*NodePriceRequest)(nil), "grpccloudprovider.NodePriceRequest")
	proto.RegisterType((*NodePriceReply)(nil), "grpccloudprovider.NodePriceReply")
	proto.RegisterType((*PodPriceRequest)(nil), "grpccloudprovider.PodPriceRequest")
	proto.RegisterType((*PodPriceReply)(nil), "grpccloudprovider.PodPriceReply")
	proto.RegisterType((*Error)(nil), "grpccloudprovider.Error")
	proto.RegisterType((*NodeGroup)(nil), "grpccloudprovider.NodeGroup")
	proto.RegisterType((*PricingModel)(nil), "grpccloudprovider.PricingModel")
	proto.RegisterType((*ResourceLimiter)(nil), "grpccloudprovider.ResourceLimiter")
	proto.RegisterMapType((map[string]int64)(nil), "grpccloudprovider.ResourceLimiter.MaxLimitsEntry")
	proto.RegisterMapType((map[string]int64)(nil), "grpccloudprovider.ResourceLimiter.MinLimitsEntry")
	proto.RegisterType((*InstanceErrorInfo)(nil), "grpccloudprovider.InstanceErrorInfo")
	proto.RegisterType((*InstanceStatus)(nil), "grpccloudprovider.InstanceStatus")
	proto.RegisterType((*Instance)(nil), "grpccloudprovider.Instance")
}

func init() { proto.RegisterFile("cloudprovider/grpc/grpc.proto", fileDescriptor_bd5c15e2a0166865) }

var fileDescriptor_bd5c15e2a0166865 = []byte{
	// 2733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x1a, 0x5d, 0x6f, 0x1b, 0xc7,
	0x91, 0x47, 0x8a, 0x12, 0x39, 0xd4, 0x07, 0xb5, 0x92, 0x65, 0x9a, 0x76, 0x6c, 0xe5, 0xa2, 0xa4,
	0xaa, 0xeb, 0x52, 0xb1, 0xd2, 0x14, 0x76, 0x90, 0xa4, 0x95, 0x28, 0x46, 0x52, 0x6b, 0x51, 0xc4,
	0x89, 0x0a, 0x8a, 0x26, 0xa8, 0x73, 0xba, 0x5b, 0x51, 0x17, 0xdd, 0x07, 0x7d, 0x1f, 0x8a, 0x95,
	0x00, 0x79, 0x6e, 0x81, 0x02, 0x2d, 0xd0, 0x3e, 0xf6, 0xb1, 0x0f, 0x7d, 0xeb, 0x5b, 0x03, 0x14,
	0x2d, 0xd0, 0xb7, 0xfe, 0x81, 0xfc, 0x9e, 0xa2, 0xd8, 0x8f, 0xfb, 0x22, 0x57, 0x14, 0x8f, 0x8a,
	0xd1, 0xbe, 0x08, 0xdc, 0xd9, 0x99, 0xd9, 0x99, 0xd9, 0xb9, 0xf9, 0x5a, 0xc1, 0x6b, 0x9a, 0xe9,
	0x04, 0x7a, 0xdf, 0x75, 0x2e, 0x0c, 0x1d, 0xbb, 0x1b, 0x3d, 0xb7, 0xaf, 0xd1, 0x3f, 0x8d, 0xbe,
	0xeb, 0xf8, 0x0e, 0x5a, 0x24, 0xbf, 0x53, 0x28, 0xf5, 0x7b, 0x3d, 0xc7, 0xe9, 0x99, 0x78, 0x83,
	0x22, 0x9c, 0x04, 0xa7, 0x1b, 0x9e, 0xef, 0x06, 0x9a, 0xcf, 0x08, 0xea, 0x77, 0x06, 0x77, 0x55,
	0xfb, 0x92, 0x6f, 0xc9, 0xe7, 0x4f, 0xbc, 0x86, 0xe1, 0x6c, 0xa8, 0x7d, 0x63, 0x43, 0x73, 0x5c,
	0xbc, 0x71, 0xf1, 0x78, 0xa3, 0x87, 0x6d, 0xec, 0xaa, 0x3e, 0xd6, 0x19, 0x8e, 0xfc, 0x01, 0xdc,
	0x6d, 0x92, 0xd3, 0x3a, 0xfc, 0xb4, 0x23, 0xec, 0x5e, 0x18, 0x1a, 0x56, 0xf0, 0x8b, 0x00, 0x7b,
	0x3e, 0xba, 0x0f, 0x10, 0xca, 0xb1, 0xbf, 0x53, 0x93, 0x56, 0xa5, 0xf5, 0xb2, 0x92, 0x80, 0xc8,
	0xdf, 0x48, 0x30, 0xf7, 0xf3, 0xe0, 0x04, 0x6f, 0xe9, 0x56, 0xd3, 0xb1, 0x4f, 0x8d, 0x1e, 0x7a,
	0x0b, 0xe6, 0xcf, 0x19, 0x60, 0x4b, 0xd7, 0x5d, 0xec, 0x79, 0x9c, 0x6a, 0x00, 0x8a, 0x64, 0x98,
	0xe5, 0x90, 0xae, 0x73, 0x8e, 0xed, 0x5a, 0x9e, 0x62, 0xa5, 0x60, 0x68, 0x0d, 0xe6, 0xf8, 0xba,
	0xb9, 0xd5, 0xc4, 0xae, 0x5f, 0x2b, 0x50, 0xa4, 0x34, 0x10, 0xfd, 0x08, 0x6e, 0x71, 0x40, 0xeb,
	0xa5, 0xef, 0xaa, 0x5b, 0x6e, 0x2f, 0xb0, 0xb0, 0xed, 0x7b, 0xb5, 0xa9, 0xd5, 0xc2, 0x7a, 0x59,
	0x11, 0x6f, 0xca, 0x7f, 0xcf, 0xc3, 0x6c, 0xdb, 0xd1, 0xf1, 0xae, 0xeb, 0x04, 0xfd, 0x1d, 0x7c,
	0x8a, 0x56, 0xa1, 0x62, 0x87, 0xeb, 0x48, 0xd7, 0x24, 0x08, 0xd5, 0x60, 0xc6, 0x32, 0xec, 0x23,
	0xe3, 0x4b, 0x4c, 0xa5, 0x2d, 0x2a, 0xe1, 0x92, 0xee, 0xa8, 0x2f, 0xe9, 0x4e, 0x81, 0xef, 0xb0,
	0x25, 0x51, 0x93, 0x9a, 0xcb, 0x33, 0x1c, 0xdb, 0xc6, 0x7a, 0x6d, 0x6a, 0x55, 0x5a, 0x2f, 0x29,
	0x29, 0x18, 0x7a, 0x1b, 0x96, 0x0c, 0x5b, 0x33, 0x03, 0x1d, 0xb7, 0x5e, 0x1a, 0x9e, 0x6f, 0xd8,
	0x3d, 0x22, 0x58, 0xad, 0x48, 0x51, 0x45, 0x5b, 0xa8, 0x09, 0xd3, 0xa6, 0x7a, 0x82, 0x4d, 0xaf,
	0x36, 0xbd, 0x5a, 0x58, 0xaf, 0x6c, 0xfe, 0xa0, 0x31, 0xe4, 0x36, 0x8d, 0xa4, 0x72, 0x8d, 0x67,
	0x14, 0xbb, 0x65, 0xfb, 0xee, 0xa5, 0xc2, 0x49, 0xeb, 0x4f, 0xa1, 0x92, 0x00, 0xa3, 0x2a, 0x14,
	0xce, 0xf1, 0x25, 0xd7, 0x9b, 0xfc, 0x44, 0xcb, 0x50, 0xbc, 0x50, 0xcd, 0x00, 0xf3, 0xbb, 0x61,
	0x8b, 0xf7, 0xf2, 0x4f, 0x24, 0xf9, 0x9b, 0x3c, 0xcc, 0x37, 0x89, 0xf0, 0x9a, 0x3f, 0xa6, 0xa7,
	0xa0, 0x67, 0xb0, 0xe0, 0x62, 0xcf, 0x09, 0x5c, 0x0d, 0x3f, 0x33, 0x2c, 0xc3, 0xc7, 0x2e, 0x65,
	0x5b, 0xd9, 0x94, 0x05, 0xb2, 0x2b, 0x69, 0x4c, 0x65, 0x90, 0x14, 0x75, 0x61, 0xf9, 0x3c, 0xe9,
	0x76, 0x81, 0xab, 0xfa, 0x86, 0x63, 0x53, 0xeb, 0x57, 0x36, 0x57, 0x05, 0x2c, 0x53, 0x5e, 0xaa,
	0x08, 0xa9, 0xd1, 0xbb, 0x50, 0x24, 0xf7, 0xcd, 0x3c, 0xa7, 0xb2, 0xf9, 0xe0, 0x1a, 0xab, 0x2a,
	0x0c, 0x1b, 0x3d, 0x84, 0xaa, 0x1a, 0xf8, 0x4e, 0x27, 0x79, 0xcf, 0xec, 0xf2, 0x86, 0xe0, 0xb2,
	0x09, 0xb3, 0x91, 0xe1, 0xfa, 0xe6, 0x25, 0x7a, 0x1b, 0x8a, 0xd8, 0x75, 0x1d, 0x97, 0x5a, 0xac,
	0xb2, 0x59, 0x13, 0x1c, 0xd9, 0x22, 0xfb, 0x7b, 0x39, 0x85, 0x21, 0xa2, 0xfb, 0x50, 0xd6, 0x18,
	0x07, 0xac, 0x53, 0x13, 0x96, 0xf6, 0x72, 0x4a, 0x0c, 0xda, 0x06, 0x28, 0xb9, 0xd8, 0xeb, 0x3b,
	0xb6, 0x87, 0xe5, 0x07, 0x50, 0x6e, 0xab, 0x16, 0x66, 0x47, 0x21, 0x98, 0xb2, 0x55, 0x0b, 0xf3,
	0xbb, 0xa1, 0xbf, 0xe5, 0x43, 0x58, 0x88, 0x34, 0xf2, 0x18, 0xda, 0xfb, 0x00, 0x91, 0xd3, 0x93,
	0x8f, 0x97, 0x58, 0xe2, 0xde, 0x28, 0x4b, 0x28, 0x09, 0x7c, 0xf9, 0x00, 0x6e, 0x47, 0x1b, 0x1f,
	0x39, 0x2e, 0xf9, 0x3d, 0xae, 0x87, 0x10, 0xf9, 0x88, 0xdf, 0xe7, 0xb9, 0x7c, 0x8e, 0x8e, 0xe5,
	0x2d, 0xa8, 0x44, 0xec, 0xb0, 0x87, 0x36, 0xa1, 0x68, 0xf8, 0xd8, 0x1a, 0x4f, 0x2c, 0x86, 0x2a,
	0xff, 0x41, 0x82, 0x5b, 0xc3, 0x22, 0x4d, 0x66, 0xfb, 0xf7, 0xa1, 0x1c, 0xe9, 0xca, 0xdd, 0x77,
	0xa4, 0x0c, 0xe4, 0x66, 0x22, 0x82, 0xd4, 0xcd, 0xfc, 0x51, 0x82, 0xc5, 0x8e, 0x6b, 0x68, 0x86,
	0xdd, 0x3b, 0x70, 0x74, 0x6c, 0x4e, 0x2a, 0xd1, 0x16, 0x31, 0xaa, 0xa1, 0x61, 0xca, 0x84, 0x8b,
	0x24, 0xf2, 0xdb, 0xe4, 0x59, 0x7b, 0x39, 0x25, 0x41, 0x94, 0x12, 0xeb, 0x29, 0xdc, 0xda, 0xba,
	0x50, 0x0d, 0x53, 0x3d, 0x31, 0xf1, 0x81, 0xaa, 0x9d, 0x19, 0x36, 0xee, 0x5e, 0x12, 0xcb, 0xaf,
	0x42, 0xc5, 0x8a, 0xd7, 0xd4, 0xfe, 0x65, 0x25, 0x09, 0x92, 0xff, 0x21, 0x41, 0x5d, 0x48, 0x3b,
	0xa9, 0x6a, 0x9f, 0xc1, 0x2d, 0x55, 0xc4, 0x8f, 0x6b, 0xb9, 0x2e, 0xe0, 0x20, 0x3c, 0x7f, 0x2f,
	0xa7, 0x88, 0x19, 0xa5, 0x34, 0xff, 0x67, 0x11, 0x96, 0xda, 0xf8, 0x8b, 0xd8, 0x7d, 0xc6, 0xf4,
	0xda, 0x01, 0xc3, 0x30, 0xe7, 0x4d, 0x82, 0x06, 0x13, 0x4b, 0x61, 0x38, 0xb1, 0x10, 0x1e, 0x86,
	0x4d, 0x8e, 0xa6, 0x29, 0x64, 0x8a, 0xa6, 0x90, 0x24, 0x88, 0x9d, 0xf2, 0x32, 0xc2, 0x28, 0x72,
	0x8c, 0x18, 0x84, 0x7e, 0x36, 0x90, 0x12, 0x36, 0x45, 0x7e, 0x39, 0xac, 0x9f, 0x28, 0x33, 0xa0,
	0x4f, 0x61, 0xd6, 0xbb, 0xf4, 0x7c, 0x6c, 0xb1, 0xcd, 0xda, 0x0c, 0xe5, 0xf8, 0x64, 0x4c, 0x8e,
	0x47, 0x09, 0x52, 0xc6, 0x37, 0xc5, 0x0d, 0x3d, 0x86, 0x69, 0x5f, 0x35, 0x48, 0x82, 0x2e, 0x51,
	0xbe, 0x77, 0x1a, 0xac, 0x4e, 0x69, 0xa8, 0x7d, 0xa3, 0x41, 0xea, 0x94, 0xc6, 0xc5, 0xe3, 0x46,
	0x97, 0x60, 0x28, 0x1c, 0x11, 0x9d, 0xc0, 0x3c, 0x26, 0xe9, 0x3b, 0xcc, 0x0b, 0x5e, 0xad, 0x4c,
	0x49, 0xdf, 0x1b, 0x53, 0xa4, 0x56, 0x8a, 0x98, 0x09, 0x35, 0xc0, 0xf1, 0x06, 0xe9, 0xb0, 0xfe,
	0x13, 0x58, 0x1c, 0x52, 0x3a, 0x13, 0x83, 0x2d, 0x58, 0x12, 0x88, 0x98, 0x29, 0x25, 0xff, 0x4e,
	0x82, 0xc5, 0xb4, 0xea, 0xff, 0xeb, 0x10, 0xf7, 0x67, 0x09, 0x96, 0x07, 0x13, 0xf9, 0x84, 0x42,
	0xb5, 0x6f, 0x50, 0x3c, 0xec, 0xe5, 0x86, 0xca, 0x87, 0x94, 0x98, 0xe7, 0x30, 0xb7, 0xdb, 0x39,
	0xa6, 0x37, 0x37, 0xa9, 0x78, 0xf7, 0xa0, 0xd4, 0xeb, 0x07, 0xf4, 0xe3, 0x61, 0x17, 0xb3, 0x97,
	0x53, 0x22, 0x48, 0xea, 0xb0, 0x6f, 0x25, 0xb8, 0xb3, 0x8b, 0xfd, 0x28, 0x4e, 0xed, 0x76, 0x8e,
	0x13, 0x31, 0xf2, 0x05, 0x2c, 0x46, 0x81, 0x6a, 0xb7, 0x1f, 0x84, 0xd1, 0x8e, 0x78, 0x7a, 0x53,
	0x20, 0xc5, 0x95, 0x8c, 0xe2, 0x38, 0x18, 0x72, 0x61, 0x2e, 0x3f, 0xcc, 0xbd, 0xbe, 0x03, 0x2b,
	0x62, 0xe4, 0x4c, 0xce, 0xf7, 0x21, 0xcc, 0x36, 0x4d, 0xac, 0xda, 0xa1, 0xdb, 0x35, 0xc6, 0x34,
	0x21, 0x37, 0x20, 0xa1, 0x57, 0xf0, 0xa9, 0x8b, 0xbd, 0xb3, 0xc9, 0xe8, 0x4f, 0x61, 0x7e, 0x1b,
	0x9b, 0x8e, 0xdd, 0xf3, 0x32, 0x84, 0xed, 0x64, 0x50, 0xce, 0x0f, 0x07, 0xe5, 0xb0, 0x1c, 0x29,
	0x24, 0xca, 0x91, 0x33, 0x98, 0x8d, 0xce, 0x99, 0xcc, 0x55, 0xea, 0x30, 0x73, 0xc2, 0x38, 0x44,
	0xb5, 0x5b, 0x08, 0x48, 0x39, 0xca, 0x27, 0x89, 0x3a, 0x2a, 0x5b, 0x4f, 0x76, 0xbd, 0x6a, 0xf2,
	0x3a, 0xcc, 0x1e, 0xb0, 0xfe, 0x84, 0xa9, 0x91, 0x68, 0x5f, 0xa4, 0x54, 0xfb, 0x42, 0x31, 0x59,
	0x8f, 0x13, 0x63, 0xf2, 0x16, 0x48, 0x4a, 0xb5, 0x40, 0xf2, 0x0b, 0x58, 0xe8, 0xaa, 0x6e, 0x0f,
	0xfb, 0x31, 0x72, 0x76, 0xeb, 0xac, 0x02, 0xf8, 0x11, 0x13, 0xd6, 0x64, 0x91, 0x62, 0x25, 0x86,
	0xa5, 0x6c, 0x64, 0xc1, 0xd2, 0xbe, 0xad, 0xb9, 0x58, 0xf5, 0x30, 0x3b, 0xf4, 0xbb, 0xba, 0xfa,
	0x65, 0x28, 0xea, 0xd8, 0xf4, 0x55, 0xde, 0xcc, 0xb1, 0x85, 0xdc, 0x84, 0xc5, 0xf4, 0x71, 0x93,
	0x78, 0xea, 0xe7, 0x80, 0x76, 0xb0, 0x89, 0x7d, 0x4c, 0x6e, 0xf7, 0x95, 0x78, 0x6b, 0x21, 0xf2,
	0xd6, 0x6d, 0xa8, 0xa6, 0xce, 0x9a, 0x44, 0x5e, 0x0f, 0xee, 0xec, 0x60, 0xa6, 0x74, 0xf2, 0x7a,
	0x5f, 0xad, 0xa5, 0xf7, 0xe1, 0xb6, 0xe8, 0xd0, 0x49, 0xe4, 0x7f, 0x13, 0x66, 0xf6, 0x75, 0x46,
	0x5a, 0x8f, 0x5d, 0x87, 0xcb, 0x1a, 0xbb, 0xd2, 0x3a, 0xc0, 0x0e, 0x3e, 0x09, 0x7a, 0xd7, 0x63,
	0x7e, 0x08, 0xe5, 0x7d, 0xdb, 0xf3, 0x55, 0x5b, 0xc3, 0xa4, 0x94, 0x49, 0xf5, 0x23, 0x77, 0x05,
	0xd2, 0x84, 0xc8, 0x61, 0x3b, 0xf2, 0x6b, 0x09, 0x20, 0x71, 0x1f, 0x13, 0x25, 0x68, 0x23, 0x14,
	0x60, 0x44, 0x82, 0x8e, 0x84, 0x24, 0x09, 0x3a, 0x22, 0x48, 0x7d, 0x3f, 0xc4, 0xa1, 0x2d, 0xb5,
	0x87, 0x8f, 0x7c, 0xd5, 0xc7, 0x47, 0x81, 0x65, 0xa9, 0x2e, 0xed, 0x12, 0xbd, 0xf0, 0xf3, 0x2e,
	0x28, 0xf4, 0x37, 0xb1, 0x87, 0x1d, 0x58, 0x54, 0x6a, 0x3e, 0xf9, 0x88, 0xd6, 0xf2, 0xdf, 0xf2,
	0x50, 0x0a, 0x33, 0x2e, 0x41, 0xb4, 0x0c, 0xd3, 0x34, 0x9a, 0x9d, 0x63, 0xce, 0x20, 0x5a, 0xa3,
	0x15, 0x98, 0xb6, 0xb0, 0xe5, 0xb8, 0x97, 0x94, 0x45, 0x41, 0xe1, 0x2b, 0xd2, 0x3d, 0xe3, 0xfe,
	0x19, 0xb6, 0xb0, 0xab, 0x9a, 0x47, 0xbe, 0xe3, 0xaa, 0x3d, 0x16, 0x73, 0x0b, 0xca, 0x10, 0x9c,
	0x76, 0xda, 0xa6, 0xe9, 0x7c, 0x81, 0xf5, 0x8e, 0xa3, 0xb7, 0x03, 0xeb, 0x04, 0xbb, 0xbc, 0x5a,
	0x1e, 0x82, 0xa3, 0x5f, 0xc2, 0x82, 0xa7, 0xa9, 0xa6, 0xea, 0xc6, 0x45, 0x63, 0x91, 0xde, 0xd2,
	0xdb, 0x23, 0x6a, 0x86, 0xc6, 0x51, 0x9a, 0x84, 0xe5, 0xcd, 0x41, 0x46, 0xf5, 0x6d, 0x58, 0x16,
	0x21, 0x5e, 0x97, 0x33, 0x0b, 0xc9, 0x9c, 0xf9, 0x35, 0xac, 0x74, 0x5d, 0xd5, 0xf6, 0x0c, 0x6c,
	0xfb, 0x47, 0xda, 0x19, 0xd6, 0x03, 0x13, 0xbb, 0xfb, 0xf6, 0xa9, 0x83, 0x9e, 0xc0, 0x6d, 0xa2,
	0x8d, 0xa6, 0xfa, 0x24, 0x2b, 0x7f, 0xec, 0x98, 0x81, 0x85, 0xbd, 0xa6, 0x13, 0xd8, 0x3e, 0x0f,
	0xba, 0x57, 0x6d, 0x13, 0xfb, 0xb8, 0xec, 0xdb, 0xc4, 0x3a, 0xdf, 0xe0, 0x17, 0x36, 0x04, 0x27,
	0x39, 0xb7, 0xe3, 0x3a, 0xbe, 0xa3, 0x39, 0x66, 0xc7, 0x71, 0x7d, 0x72, 0x77, 0x7d, 0xbe, 0x0e,
	0x9d, 0x3e, 0x5c, 0x13, 0xa7, 0xe8, 0x3b, 0xae, 0xcf, 0x79, 0xd1, 0xdf, 0xf2, 0xbf, 0x25, 0x98,
	0xdd, 0x73, 0x3c, 0x9f, 0x10, 0x53, 0xb1, 0x8f, 0x61, 0xf6, 0x2c, 0xb1, 0xe6, 0xdf, 0xc4, 0x63,
	0x81, 0xb5, 0x93, 0x64, 0xa9, 0x05, 0x6f, 0x17, 0x92, 0x6c, 0xea, 0x9f, 0xc1, 0xe2, 0x10, 0x8a,
	0xc0, 0xd0, 0xef, 0x26, 0x0d, 0x7d, 0x55, 0x0f, 0x1c, 0xab, 0x9b, 0xbc, 0x89, 0xbf, 0x4c, 0x41,
	0x89, 0x38, 0x33, 0xd5, 0x22, 0x0c, 0xa4, 0x52, 0x9c, 0xf6, 0x99, 0xfa, 0x3a, 0x2b, 0xc5, 0xca,
	0x0a, 0xfd, 0x8d, 0x3e, 0x80, 0x72, 0xe0, 0x11, 0x7f, 0x73, 0x7d, 0x8f, 0x8f, 0x9d, 0x1e, 0x5c,
	0xa3, 0xaa, 0x12, 0x53, 0xa0, 0x7d, 0x58, 0x8c, 0x6e, 0x24, 0x74, 0x22, 0xea, 0xca, 0xe2, 0x28,
	0x12, 0xa2, 0x28, 0xc3, 0x54, 0xa8, 0x09, 0xf3, 0xb6, 0x63, 0x7f, 0x89, 0x5d, 0x87, 0xc7, 0x65,
	0xda, 0x1e, 0x5e, 0xc3, 0x67, 0x80, 0x04, 0xb5, 0xa1, 0x62, 0x44, 0xb1, 0x20, 0xec, 0x21, 0x1f,
	0x5d, 0x51, 0xf8, 0xd3, 0x7b, 0x8b, 0x43, 0x07, 0xff, 0x4a, 0x92, 0x0c, 0xd0, 0x21, 0xcc, 0x45,
	0xde, 0x4d, 0xbd, 0x61, 0x86, 0xca, 0xf4, 0x7d, 0x01, 0x47, 0xf1, 0x57, 0xa0, 0xa4, 0xe9, 0x49,
	0xae, 0xe1, 0xb3, 0x6b, 0xc3, 0xb1, 0x6b, 0x25, 0xfa, 0x35, 0x25, 0x20, 0x75, 0x1d, 0xaa, 0x83,
	0x12, 0x09, 0xbc, 0xe4, 0xbd, 0xb4, 0x97, 0xac, 0x89, 0x02, 0xe7, 0x60, 0x48, 0x4c, 0xba, 0xca,
	0xef, 0x25, 0xb8, 0xd5, 0xc5, 0x56, 0xdf, 0x54, 0x59, 0x56, 0xa5, 0x92, 0x4e, 0x18, 0xc8, 0x9f,
	0x42, 0xc9, 0xe6, 0x2c, 0xb8, 0x38, 0x77, 0x47, 0xd8, 0x9b, 0xb4, 0x14, 0x21, 0x7a, 0x2a, 0x8a,
	0xaf, 0x01, 0xd0, 0xd9, 0x30, 0x13, 0x63, 0x05, 0xa6, 0x31, 0x59, 0xb1, 0xb1, 0x7b, 0x49, 0xe1,
	0x2b, 0xf9, 0x37, 0x12, 0x54, 0x9a, 0x2e, 0x56, 0xfd, 0xff, 0x83, 0xd9, 0xd7, 0x07, 0x50, 0x61,
	0x75, 0xc9, 0x64, 0x29, 0xfd, 0xa7, 0xb0, 0xbc, 0x15, 0xf8, 0x4e, 0x34, 0x42, 0xc7, 0x3c, 0xbf,
	0xaf, 0xc3, 0x82, 0x9a, 0x86, 0x73, 0x1b, 0x0c, 0x82, 0xe5, 0xaf, 0xa1, 0x4a, 0xc4, 0xec, 0xb8,
	0x19, 0xaa, 0x6a, 0xc1, 0x74, 0x12, 0xdd, 0x83, 0xb2, 0xe7, 0xab, 0xae, 0xdf, 0x35, 0xac, 0x30,
	0x67, 0xc5, 0x00, 0x52, 0x2b, 0x63, 0x5b, 0xa7, 0x7b, 0x53, 0x74, 0x2f, 0x5c, 0x92, 0x76, 0x25,
	0x71, 0xfe, 0x64, 0xd7, 0xb1, 0x02, 0x45, 0x3a, 0xc3, 0xa3, 0x02, 0x49, 0x04, 0x4e, 0x97, 0x29,
	0x43, 0x7f, 0x05, 0x0b, 0x1d, 0x47, 0xcf, 0xa4, 0x66, 0x15, 0x0a, 0x7d, 0x47, 0xe7, 0x5a, 0x92,
	0x9f, 0x13, 0x2b, 0x89, 0x61, 0x2e, 0x3e, 0xfc, 0xd5, 0xe9, 0xf8, 0x0e, 0x14, 0x29, 0x15, 0xb9,
	0x20, 0x2d, 0x11, 0xb8, 0xc9, 0x6f, 0xf2, 0x35, 0x90, 0x2a, 0xd2, 0x09, 0x9f, 0x97, 0xf8, 0x4a,
	0xbe, 0x0b, 0xe5, 0xc8, 0x4f, 0xd1, 0x3c, 0xe4, 0x0d, 0x9d, 0x93, 0xe5, 0x0d, 0x5d, 0xbe, 0x4f,
	0x12, 0x63, 0x3c, 0x2d, 0x1d, 0xda, 0xff, 0x6b, 0x1e, 0x16, 0x06, 0x66, 0x0c, 0xe8, 0x10, 0xca,
	0x96, 0x61, 0xd3, 0x95, 0x37, 0x22, 0xf1, 0x0d, 0x90, 0x35, 0x0e, 0x42, 0x1a, 0x16, 0x41, 0x63,
	0x1e, 0x94, 0xa1, 0xfa, 0x92, 0x33, 0xcc, 0x8f, 0xcf, 0x30, 0xa4, 0x09, 0x19, 0x86, 0xeb, 0xfa,
	0xfb, 0x30, 0x9f, 0x3e, 0x2d, 0x4b, 0xb1, 0x42, 0xa9, 0x53, 0xac, 0x33, 0x95, 0x3a, 0x7f, 0x92,
	0x48, 0xeb, 0xc4, 0x4a, 0x50, 0x7a, 0x59, 0x34, 0xa2, 0xb7, 0x00, 0xe8, 0x35, 0x37, 0x4d, 0x95,
	0xbf, 0x12, 0xce, 0x6f, 0xbe, 0x39, 0xa2, 0x92, 0x6d, 0x45, 0xc8, 0x4a, 0x82, 0x90, 0xf8, 0x27,
	0x5b, 0xc5, 0x5f, 0x67, 0x0c, 0x40, 0x32, 0xcc, 0xd2, 0xc5, 0x01, 0xf6, 0xbc, 0xb0, 0xb2, 0x2c,
	0x2b, 0x29, 0x98, 0xfc, 0x5b, 0x09, 0xe6, 0xc3, 0x43, 0x48, 0xe0, 0x0f, 0x3c, 0xf4, 0x63, 0x28,
	0x7a, 0x24, 0x05, 0x70, 0xb1, 0x56, 0x47, 0x88, 0x45, 0x53, 0x85, 0xc2, 0xd0, 0xd1, 0x36, 0x17,
	0x26, 0x11, 0xd4, 0xd7, 0xae, 0x53, 0x89, 0x95, 0x06, 0x11, 0x99, 0x7c, 0x0c, 0xa5, 0x70, 0x7f,
	0xd0, 0xf7, 0xd0, 0x53, 0x98, 0xf6, 0xa8, 0x84, 0x9c, 0xf9, 0xeb, 0xd7, 0x08, 0x16, 0x78, 0x0a,
	0x27, 0x78, 0xf8, 0x31, 0xa0, 0x61, 0x4b, 0xa2, 0x25, 0x58, 0x68, 0x29, 0xca, 0xa1, 0xf2, 0xfc,
	0xb8, 0xbd, 0xd3, 0xfa, 0x68, 0xbf, 0xdd, 0xda, 0xa9, 0xe6, 0x50, 0x1d, 0x56, 0x18, 0xf0, 0xf0,
	0xb8, 0xfb, 0xfc, 0xf0, 0xa3, 0xe7, 0x4a, 0xeb, 0xe8, 0xf0, 0x58, 0x69, 0xb6, 0x8e, 0xaa, 0x12,
	0x5a, 0x80, 0x0a, 0xdf, 0xeb, 0xee, 0xb5, 0x94, 0xaa, 0xf6, 0xd0, 0x80, 0xb9, 0x94, 0x29, 0x08,
	0xcb, 0xa3, 0xee, 0x56, 0xb7, 0x95, 0x62, 0xb9, 0x08, 0x73, 0x0c, 0xa8, 0x1c, 0xb7, 0xdb, 0xfb,
	0xed, 0xdd, 0xaa, 0x84, 0x6e, 0xc3, 0x12, 0x03, 0x6d, 0xb7, 0xf6, 0xdb, 0xbb, 0xcf, 0x9b, 0x4a,
	0x6b, 0xab, 0xdb, 0xda, 0xa9, 0xe6, 0x07, 0x37, 0x76, 0x5a, 0xcf, 0x5a, 0x64, 0xa3, 0xb0, 0xf9,
	0x6d, 0x19, 0x96, 0x45, 0xaf, 0xd5, 0xe8, 0x10, 0x66, 0xf8, 0xab, 0x1a, 0x12, 0x59, 0x24, 0xfd,
	0x54, 0x59, 0x7f, 0x30, 0x0a, 0xa5, 0x6f, 0x5e, 0xca, 0x39, 0xf4, 0x31, 0x4c, 0xb5, 0x55, 0x0b,
	0xa3, 0x86, 0x08, 0xf5, 0xea, 0xf7, 0xf2, 0xba, 0x30, 0x23, 0x86, 0x2f, 0x70, 0x72, 0x0e, 0x9d,
	0xb0, 0xe6, 0x8f, 0x3d, 0x96, 0x65, 0xe6, 0x2e, 0x8f, 0xca, 0xb7, 0x5e, 0x78, 0xc6, 0xe7, 0x2c,
	0xbb, 0x25, 0xdf, 0xbb, 0xd0, 0xc3, 0x51, 0x94, 0xe9, 0x77, 0xba, 0xfa, 0xfa, 0x58, 0xb8, 0xec,
	0x2c, 0x15, 0x66, 0x78, 0xac, 0xcc, 0xac, 0xcc, 0xda, 0x35, 0xaf, 0x54, 0xe1, 0x11, 0x5f, 0x41,
	0x2d, 0x39, 0xe8, 0x4c, 0xbd, 0x4a, 0x65, 0x3d, 0xf3, 0x87, 0xe3, 0xbe, 0x19, 0x85, 0x87, 0xff,
	0x0a, 0x66, 0x93, 0x43, 0x75, 0xf4, 0xd6, 0x78, 0x0f, 0x0e, 0x42, 0xe5, 0x86, 0xa6, 0xf3, 0x72,
	0x0e, 0x39, 0x80, 0x76, 0xb1, 0x3f, 0x98, 0x4d, 0xb2, 0xaa, 0xf5, 0xbd, 0x31, 0x9e, 0xd0, 0x23,
	0x85, 0x4a, 0xe1, 0xb4, 0x3b, 0xf3, 0x31, 0xa2, 0x28, 0x98, 0x1a, 0x9d, 0xcb, 0x39, 0x74, 0x01,
	0xcb, 0xa2, 0xb1, 0x74, 0xe6, 0xb3, 0x1e, 0x65, 0x99, 0x77, 0xcb, 0x39, 0xf4, 0x29, 0xcc, 0xf0,
	0x09, 0x74, 0xe6, 0xa3, 0x84, 0xe1, 0x20, 0x31, 0xcd, 0x66, 0xdc, 0xf9, 0x7c, 0xfa, 0x3b, 0xe1,
	0x9e, 0x9c, 0x75, 0xcb, 0xb9, 0xcd, 0xff, 0x40, 0xe2, 0x8b, 0x0d, 0x43, 0xda, 0x2f, 0x60, 0x86,
	0xcf, 0x68, 0x47, 0x7f, 0xbc, 0x63, 0x1c, 0x97, 0x9c, 0xf5, 0xca, 0x39, 0xca, 0x99, 0xff, 0xdf,
	0xca, 0x8d, 0x39, 0x27, 0x66, 0xc3, 0xd4, 0xb9, 0x20, 0x9e, 0xd7, 0x65, 0x62, 0x2e, 0x8a, 0x6c,
	0x03, 0xa3, 0x3f, 0xf6, 0x35, 0x26, 0x27, 0xb0, 0xc2, 0xaf, 0x51, 0x30, 0x11, 0xae, 0xaf, 0x5d,
	0x8b, 0xc7, 0xf8, 0x7f, 0x12, 0x36, 0x26, 0x74, 0xb4, 0x85, 0x44, 0xc5, 0xc8, 0xf0, 0xf0, 0xb6,
	0xfe, 0xc6, 0x75, 0x68, 0x8c, 0x79, 0x1f, 0xd0, 0xf0, 0x50, 0x13, 0x3d, 0x12, 0x12, 0x5f, 0x31,
	0x70, 0xad, 0x3f, 0x1c, 0x13, 0x9b, 0x9d, 0xd8, 0x86, 0xfc, 0xbe, 0x9e, 0xe9, 0x1a, 0xea, 0x22,
	0x43, 0xe9, 0x21, 0xbf, 0x2e, 0x14, 0xe9, 0x90, 0x34, 0x13, 0xcb, 0xd7, 0x84, 0x22, 0x87, 0xa3,
	0x56, 0xc6, 0x95, 0x99, 0xfb, 0xa6, 0x5c, 0x53, 0xd6, 0xfe, 0x1c, 0xaa, 0x83, 0x7d, 0x7a, 0xa6,
	0x03, 0x44, 0x49, 0x50, 0xd8, 0xf8, 0x33, 0x0d, 0x68, 0x07, 0x7e, 0x63, 0x0d, 0xe2, 0x3e, 0x9e,
	0x96, 0x20, 0xd3, 0xac, 0x61, 0xcf, 0xc4, 0xf6, 0xbe, 0x28, 0x3c, 0xc5, 0x7d, 0x3f, 0xe3, 0xcb,
	0xbc, 0xf3, 0xc6, 0x7c, 0x13, 0x4d, 0xbc, 0x9c, 0x43, 0x67, 0xb0, 0x30, 0xd0, 0x96, 0x67, 0x3a,
	0x40, 0x94, 0xc3, 0x44, 0x6d, 0xbe, 0x9c, 0x23, 0xd5, 0x1e, 0x7f, 0x85, 0x13, 0x56, 0x7b, 0xe9,
	0x97, 0x40, 0x61, 0xdc, 0x4a, 0x3e, 0xe2, 0xc9, 0xb9, 0xcd, 0x7f, 0x49, 0xb0, 0x94, 0x2c, 0x3d,
	0xc2, 0x18, 0x7c, 0xcc, 0xda, 0x44, 0xda, 0xc3, 0xa2, 0x37, 0xae, 0x50, 0x26, 0xd9, 0x5e, 0xd7,
	0x5f, 0x1f, 0x8d, 0xc4, 0xe4, 0x57, 0xa0, 0x14, 0x76, 0xc6, 0x48, 0x14, 0xf8, 0x06, 0x7a, 0x76,
	0x61, 0xde, 0x4d, 0xb5, 0xd6, 0x72, 0x6e, 0xbb, 0x09, 0x8f, 0x0c, 0x87, 0xfe, 0x23, 0x85, 0x66,
	0x06, 0x1e, 0x69, 0x05, 0xd5, 0xc0, 0x77, 0x3c, 0x4d, 0x35, 0xb1, 0xdb, 0x48, 0x93, 0x12, 0x66,
	0xdb, 0x8b, 0xa9, 0x9c, 0xb5, 0xeb, 0xf6, 0xb5, 0x8e, 0x74, 0x32, 0x4d, 0x07, 0xbe, 0xef, 0xfc,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x7d, 0x17, 0xc3, 0xa4, 0x2a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CloudProviderServiceClient is the client API for CloudProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudProviderServiceClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectReply, error)
	Name(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*NameReply, error)
	NodeGroups(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*NodeGroupsReply, error)
	NodeGroupForNode(ctx context.Context, in *NodeGroupForNodeRequest, opts ...grpc.CallOption) (*NodeGroupForNodeReply, error)
	Pricing(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*PricingModelReply, error)
	GetAvailableMachineTypes(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*AvailableMachineTypesReply, error)
	NewNodeGroup(ctx context.Context, in *NewNodeGroupRequest, opts ...grpc.CallOption) (*NewNodeGroupReply, error)
	GetResourceLimiter(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*ResourceLimiterReply, error)
	GPULabel(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*GPULabelReply, error)
	GetAvailableGPUTypes(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*GetAvailableGPUTypesReply, error)
	Cleanup(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*CleanupReply, error)
	Refresh(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*RefreshReply, error)
}

type cloudProviderServiceClient struct {
	cc *grpc.ClientConn
}

func NewCloudProviderServiceClient(cc *grpc.ClientConn) CloudProviderServiceClient {
	return &cloudProviderServiceClient{cc}
}

func (c *cloudProviderServiceClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectReply, error) {
	out := new(ConnectReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) Name(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*NameReply, error) {
	out := new(NameReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) NodeGroups(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*NodeGroupsReply, error) {
	out := new(NodeGroupsReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/NodeGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) NodeGroupForNode(ctx context.Context, in *NodeGroupForNodeRequest, opts ...grpc.CallOption) (*NodeGroupForNodeReply, error) {
	out := new(NodeGroupForNodeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/NodeGroupForNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) Pricing(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*PricingModelReply, error) {
	out := new(PricingModelReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/Pricing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) GetAvailableMachineTypes(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*AvailableMachineTypesReply, error) {
	out := new(AvailableMachineTypesReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/GetAvailableMachineTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) NewNodeGroup(ctx context.Context, in *NewNodeGroupRequest, opts ...grpc.CallOption) (*NewNodeGroupReply, error) {
	out := new(NewNodeGroupReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/NewNodeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) GetResourceLimiter(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*ResourceLimiterReply, error) {
	out := new(ResourceLimiterReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/GetResourceLimiter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) GPULabel(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*GPULabelReply, error) {
	out := new(GPULabelReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/GPULabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) GetAvailableGPUTypes(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*GetAvailableGPUTypesReply, error) {
	out := new(GetAvailableGPUTypesReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/GetAvailableGPUTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) Cleanup(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*CleanupReply, error) {
	out := new(CleanupReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/Cleanup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudProviderServiceClient) Refresh(ctx context.Context, in *CloudProviderServiceRequest, opts ...grpc.CallOption) (*RefreshReply, error) {
	out := new(RefreshReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.CloudProviderService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudProviderServiceServer is the server API for CloudProviderService service.
type CloudProviderServiceServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectReply, error)
	Name(context.Context, *CloudProviderServiceRequest) (*NameReply, error)
	NodeGroups(context.Context, *CloudProviderServiceRequest) (*NodeGroupsReply, error)
	NodeGroupForNode(context.Context, *NodeGroupForNodeRequest) (*NodeGroupForNodeReply, error)
	Pricing(context.Context, *CloudProviderServiceRequest) (*PricingModelReply, error)
	GetAvailableMachineTypes(context.Context, *CloudProviderServiceRequest) (*AvailableMachineTypesReply, error)
	NewNodeGroup(context.Context, *NewNodeGroupRequest) (*NewNodeGroupReply, error)
	GetResourceLimiter(context.Context, *CloudProviderServiceRequest) (*ResourceLimiterReply, error)
	GPULabel(context.Context, *CloudProviderServiceRequest) (*GPULabelReply, error)
	GetAvailableGPUTypes(context.Context, *CloudProviderServiceRequest) (*GetAvailableGPUTypesReply, error)
	Cleanup(context.Context, *CloudProviderServiceRequest) (*CleanupReply, error)
	Refresh(context.Context, *CloudProviderServiceRequest) (*RefreshReply, error)
}

// UnimplementedCloudProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCloudProviderServiceServer struct {
}

func (*UnimplementedCloudProviderServiceServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedCloudProviderServiceServer) Name(ctx context.Context, req *CloudProviderServiceRequest) (*NameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}
func (*UnimplementedCloudProviderServiceServer) NodeGroups(ctx context.Context, req *CloudProviderServiceRequest) (*NodeGroupsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeGroups not implemented")
}
func (*UnimplementedCloudProviderServiceServer) NodeGroupForNode(ctx context.Context, req *NodeGroupForNodeRequest) (*NodeGroupForNodeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeGroupForNode not implemented")
}
func (*UnimplementedCloudProviderServiceServer) Pricing(ctx context.Context, req *CloudProviderServiceRequest) (*PricingModelReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pricing not implemented")
}
func (*UnimplementedCloudProviderServiceServer) GetAvailableMachineTypes(ctx context.Context, req *CloudProviderServiceRequest) (*AvailableMachineTypesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvailableMachineTypes not implemented")
}
func (*UnimplementedCloudProviderServiceServer) NewNodeGroup(ctx context.Context, req *NewNodeGroupRequest) (*NewNodeGroupReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewNodeGroup not implemented")
}
func (*UnimplementedCloudProviderServiceServer) GetResourceLimiter(ctx context.Context, req *CloudProviderServiceRequest) (*ResourceLimiterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceLimiter not implemented")
}
func (*UnimplementedCloudProviderServiceServer) GPULabel(ctx context.Context, req *CloudProviderServiceRequest) (*GPULabelReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GPULabel not implemented")
}
func (*UnimplementedCloudProviderServiceServer) GetAvailableGPUTypes(ctx context.Context, req *CloudProviderServiceRequest) (*GetAvailableGPUTypesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvailableGPUTypes not implemented")
}
func (*UnimplementedCloudProviderServiceServer) Cleanup(ctx context.Context, req *CloudProviderServiceRequest) (*CleanupReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cleanup not implemented")
}
func (*UnimplementedCloudProviderServiceServer) Refresh(ctx context.Context, req *CloudProviderServiceRequest) (*RefreshReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}

func RegisterCloudProviderServiceServer(s *grpc.Server, srv CloudProviderServiceServer) {
	s.RegisterService(&_CloudProviderService_serviceDesc, srv)
}

func _CloudProviderService_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).Name(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_NodeGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).NodeGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/NodeGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).NodeGroups(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_NodeGroupForNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupForNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).NodeGroupForNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/NodeGroupForNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).NodeGroupForNode(ctx, req.(*NodeGroupForNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_Pricing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).Pricing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/Pricing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).Pricing(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_GetAvailableMachineTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).GetAvailableMachineTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/GetAvailableMachineTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).GetAvailableMachineTypes(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_NewNodeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewNodeGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).NewNodeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/NewNodeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).NewNodeGroup(ctx, req.(*NewNodeGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_GetResourceLimiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).GetResourceLimiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/GetResourceLimiter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).GetResourceLimiter(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_GPULabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).GPULabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/GPULabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).GPULabel(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_GetAvailableGPUTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).GetAvailableGPUTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/GetAvailableGPUTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).GetAvailableGPUTypes(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_Cleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).Cleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/Cleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).Cleanup(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudProviderService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudProviderServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudProviderServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.CloudProviderService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudProviderServiceServer).Refresh(ctx, req.(*CloudProviderServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpccloudprovider.CloudProviderService",
	HandlerType: (*CloudProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _CloudProviderService_Connect_Handler,
		},
		{
			MethodName: "Name",
			Handler:    _CloudProviderService_Name_Handler,
		},
		{
			MethodName: "NodeGroups",
			Handler:    _CloudProviderService_NodeGroups_Handler,
		},
		{
			MethodName: "NodeGroupForNode",
			Handler:    _CloudProviderService_NodeGroupForNode_Handler,
		},
		{
			MethodName: "Pricing",
			Handler:    _CloudProviderService_Pricing_Handler,
		},
		{
			MethodName: "GetAvailableMachineTypes",
			Handler:    _CloudProviderService_GetAvailableMachineTypes_Handler,
		},
		{
			MethodName: "NewNodeGroup",
			Handler:    _CloudProviderService_NewNodeGroup_Handler,
		},
		{
			MethodName: "GetResourceLimiter",
			Handler:    _CloudProviderService_GetResourceLimiter_Handler,
		},
		{
			MethodName: "GPULabel",
			Handler:    _CloudProviderService_GPULabel_Handler,
		},
		{
			MethodName: "GetAvailableGPUTypes",
			Handler:    _CloudProviderService_GetAvailableGPUTypes_Handler,
		},
		{
			MethodName: "Cleanup",
			Handler:    _CloudProviderService_Cleanup_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _CloudProviderService_Refresh_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cloudprovider/grpc/grpc.proto",
}

// NodeGroupServiceClient is the client API for NodeGroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeGroupServiceClient interface {
	MaxSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*MaxSizeReply, error)
	MinSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*MinSizeReply, error)
	TargetSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*TargetSizeReply, error)
	IncreaseSize(ctx context.Context, in *IncreaseSizeRequest, opts ...grpc.CallOption) (*IncreaseSizeReply, error)
	DeleteNodes(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesReply, error)
	DecreaseTargetSize(ctx context.Context, in *DecreaseTargetSizeRequest, opts ...grpc.CallOption) (*DecreaseTargetSizeReply, error)
	Id(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*IdReply, error)
	Debug(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*DebugReply, error)
	Nodes(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*NodesReply, error)
	TemplateNodeInfo(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*TemplateNodeInfoReply, error)
	Exist(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*ExistReply, error)
	Create(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*CreateReply, error)
	Delete(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*DeleteReply, error)
	Autoprovisioned(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*AutoprovisionedReply, error)
	Belongs(ctx context.Context, in *BelongsRequest, opts ...grpc.CallOption) (*BelongsReply, error)
}

type nodeGroupServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeGroupServiceClient(cc *grpc.ClientConn) NodeGroupServiceClient {
	return &nodeGroupServiceClient{cc}
}

func (c *nodeGroupServiceClient) MaxSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*MaxSizeReply, error) {
	out := new(MaxSizeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/MaxSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) MinSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*MinSizeReply, error) {
	out := new(MinSizeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/MinSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) TargetSize(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*TargetSizeReply, error) {
	out := new(TargetSizeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/TargetSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) IncreaseSize(ctx context.Context, in *IncreaseSizeRequest, opts ...grpc.CallOption) (*IncreaseSizeReply, error) {
	out := new(IncreaseSizeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/IncreaseSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) DeleteNodes(ctx context.Context, in *DeleteNodesRequest, opts ...grpc.CallOption) (*DeleteNodesReply, error) {
	out := new(DeleteNodesReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/DeleteNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) DecreaseTargetSize(ctx context.Context, in *DecreaseTargetSizeRequest, opts ...grpc.CallOption) (*DecreaseTargetSizeReply, error) {
	out := new(DecreaseTargetSizeReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/DecreaseTargetSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Id(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*IdReply, error) {
	out := new(IdReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Debug(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*DebugReply, error) {
	out := new(DebugReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Debug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Nodes(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*NodesReply, error) {
	out := new(NodesReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) TemplateNodeInfo(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*TemplateNodeInfoReply, error) {
	out := new(TemplateNodeInfoReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/TemplateNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Exist(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*ExistReply, error) {
	out := new(ExistReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Create(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Delete(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Autoprovisioned(ctx context.Context, in *NodeGroupServiceRequest, opts ...grpc.CallOption) (*AutoprovisionedReply, error) {
	out := new(AutoprovisionedReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Autoprovisioned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeGroupServiceClient) Belongs(ctx context.Context, in *BelongsRequest, opts ...grpc.CallOption) (*BelongsReply, error) {
	out := new(BelongsReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.NodeGroupService/Belongs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeGroupServiceServer is the server API for NodeGroupService service.
type NodeGroupServiceServer interface {
	MaxSize(context.Context, *NodeGroupServiceRequest) (*MaxSizeReply, error)
	MinSize(context.Context, *NodeGroupServiceRequest) (*MinSizeReply, error)
	TargetSize(context.Context, *NodeGroupServiceRequest) (*TargetSizeReply, error)
	IncreaseSize(context.Context, *IncreaseSizeRequest) (*IncreaseSizeReply, error)
	DeleteNodes(context.Context, *DeleteNodesRequest) (*DeleteNodesReply, error)
	DecreaseTargetSize(context.Context, *DecreaseTargetSizeRequest) (*DecreaseTargetSizeReply, error)
	Id(context.Context, *NodeGroupServiceRequest) (*IdReply, error)
	Debug(context.Context, *NodeGroupServiceRequest) (*DebugReply, error)
	Nodes(context.Context, *NodeGroupServiceRequest) (*NodesReply, error)
	TemplateNodeInfo(context.Context, *NodeGroupServiceRequest) (*TemplateNodeInfoReply, error)
	Exist(context.Context, *NodeGroupServiceRequest) (*ExistReply, error)
	Create(context.Context, *NodeGroupServiceRequest) (*CreateReply, error)
	Delete(context.Context, *NodeGroupServiceRequest) (*DeleteReply, error)
	Autoprovisioned(context.Context, *NodeGroupServiceRequest) (*AutoprovisionedReply, error)
	Belongs(context.Context, *BelongsRequest) (*BelongsReply, error)
}

// UnimplementedNodeGroupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeGroupServiceServer struct {
}

func (*UnimplementedNodeGroupServiceServer) MaxSize(ctx context.Context, req *NodeGroupServiceRequest) (*MaxSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MaxSize not implemented")
}
func (*UnimplementedNodeGroupServiceServer) MinSize(ctx context.Context, req *NodeGroupServiceRequest) (*MinSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MinSize not implemented")
}
func (*UnimplementedNodeGroupServiceServer) TargetSize(ctx context.Context, req *NodeGroupServiceRequest) (*TargetSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TargetSize not implemented")
}
func (*UnimplementedNodeGroupServiceServer) IncreaseSize(ctx context.Context, req *IncreaseSizeRequest) (*IncreaseSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncreaseSize not implemented")
}
func (*UnimplementedNodeGroupServiceServer) DeleteNodes(ctx context.Context, req *DeleteNodesRequest) (*DeleteNodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodes not implemented")
}
func (*UnimplementedNodeGroupServiceServer) DecreaseTargetSize(ctx context.Context, req *DecreaseTargetSizeRequest) (*DecreaseTargetSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseTargetSize not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Id(ctx context.Context, req *NodeGroupServiceRequest) (*IdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Id not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Debug(ctx context.Context, req *NodeGroupServiceRequest) (*DebugReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Debug not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Nodes(ctx context.Context, req *NodeGroupServiceRequest) (*NodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Nodes not implemented")
}
func (*UnimplementedNodeGroupServiceServer) TemplateNodeInfo(ctx context.Context, req *NodeGroupServiceRequest) (*TemplateNodeInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TemplateNodeInfo not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Exist(ctx context.Context, req *NodeGroupServiceRequest) (*ExistReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Create(ctx context.Context, req *NodeGroupServiceRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Delete(ctx context.Context, req *NodeGroupServiceRequest) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Autoprovisioned(ctx context.Context, req *NodeGroupServiceRequest) (*AutoprovisionedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Autoprovisioned not implemented")
}
func (*UnimplementedNodeGroupServiceServer) Belongs(ctx context.Context, req *BelongsRequest) (*BelongsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Belongs not implemented")
}

func RegisterNodeGroupServiceServer(s *grpc.Server, srv NodeGroupServiceServer) {
	s.RegisterService(&_NodeGroupService_serviceDesc, srv)
}

func _NodeGroupService_MaxSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).MaxSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/MaxSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).MaxSize(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_MinSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).MinSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/MinSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).MinSize(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_TargetSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).TargetSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/TargetSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).TargetSize(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_IncreaseSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncreaseSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).IncreaseSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/IncreaseSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).IncreaseSize(ctx, req.(*IncreaseSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_DeleteNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).DeleteNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/DeleteNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).DeleteNodes(ctx, req.(*DeleteNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_DecreaseTargetSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecreaseTargetSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).DecreaseTargetSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/DecreaseTargetSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).DecreaseTargetSize(ctx, req.(*DecreaseTargetSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Id_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Id(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Id",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Id(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Debug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Debug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Debug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Debug(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Nodes(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_TemplateNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).TemplateNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/TemplateNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).TemplateNodeInfo(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Exist(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Create(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Delete(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Autoprovisioned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeGroupServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Autoprovisioned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Autoprovisioned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Autoprovisioned(ctx, req.(*NodeGroupServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeGroupService_Belongs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BelongsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeGroupServiceServer).Belongs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.NodeGroupService/Belongs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeGroupServiceServer).Belongs(ctx, req.(*BelongsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeGroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpccloudprovider.NodeGroupService",
	HandlerType: (*NodeGroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MaxSize",
			Handler:    _NodeGroupService_MaxSize_Handler,
		},
		{
			MethodName: "MinSize",
			Handler:    _NodeGroupService_MinSize_Handler,
		},
		{
			MethodName: "TargetSize",
			Handler:    _NodeGroupService_TargetSize_Handler,
		},
		{
			MethodName: "IncreaseSize",
			Handler:    _NodeGroupService_IncreaseSize_Handler,
		},
		{
			MethodName: "DeleteNodes",
			Handler:    _NodeGroupService_DeleteNodes_Handler,
		},
		{
			MethodName: "DecreaseTargetSize",
			Handler:    _NodeGroupService_DecreaseTargetSize_Handler,
		},
		{
			MethodName: "Id",
			Handler:    _NodeGroupService_Id_Handler,
		},
		{
			MethodName: "Debug",
			Handler:    _NodeGroupService_Debug_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _NodeGroupService_Nodes_Handler,
		},
		{
			MethodName: "TemplateNodeInfo",
			Handler:    _NodeGroupService_TemplateNodeInfo_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _NodeGroupService_Exist_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _NodeGroupService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _NodeGroupService_Delete_Handler,
		},
		{
			MethodName: "Autoprovisioned",
			Handler:    _NodeGroupService_Autoprovisioned_Handler,
		},
		{
			MethodName: "Belongs",
			Handler:    _NodeGroupService_Belongs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cloudprovider/grpc/grpc.proto",
}

// PricingModelServiceClient is the client API for PricingModelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PricingModelServiceClient interface {
	NodePrice(ctx context.Context, in *NodePriceRequest, opts ...grpc.CallOption) (*NodePriceReply, error)
	PodPrice(ctx context.Context, in *PodPriceRequest, opts ...grpc.CallOption) (*PodPriceReply, error)
}

type pricingModelServiceClient struct {
	cc *grpc.ClientConn
}

func NewPricingModelServiceClient(cc *grpc.ClientConn) PricingModelServiceClient {
	return &pricingModelServiceClient{cc}
}

func (c *pricingModelServiceClient) NodePrice(ctx context.Context, in *NodePriceRequest, opts ...grpc.CallOption) (*NodePriceReply, error) {
	out := new(NodePriceReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.PricingModelService/NodePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingModelServiceClient) PodPrice(ctx context.Context, in *PodPriceRequest, opts ...grpc.CallOption) (*PodPriceReply, error) {
	out := new(PodPriceReply)
	err := c.cc.Invoke(ctx, "/grpccloudprovider.PricingModelService/PodPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PricingModelServiceServer is the server API for PricingModelService service.
type PricingModelServiceServer interface {
	NodePrice(context.Context, *NodePriceRequest) (*NodePriceReply, error)
	PodPrice(context.Context, *PodPriceRequest) (*PodPriceReply, error)
}

// UnimplementedPricingModelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPricingModelServiceServer struct {
}

func (*UnimplementedPricingModelServiceServer) NodePrice(ctx context.Context, req *NodePriceRequest) (*NodePriceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodePrice not implemented")
}
func (*UnimplementedPricingModelServiceServer) PodPrice(ctx context.Context, req *PodPriceRequest) (*PodPriceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PodPrice not implemented")
}

func RegisterPricingModelServiceServer(s *grpc.Server, srv PricingModelServiceServer) {
	s.RegisterService(&_PricingModelService_serviceDesc, srv)
}

func _PricingModelService_NodePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodePriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingModelServiceServer).NodePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.PricingModelService/NodePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingModelServiceServer).NodePrice(ctx, req.(*NodePriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingModelService_PodPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingModelServiceServer).PodPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpccloudprovider.PricingModelService/PodPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingModelServiceServer).PodPrice(ctx, req.(*PodPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PricingModelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpccloudprovider.PricingModelService",
	HandlerType: (*PricingModelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodePrice",
			Handler:    _PricingModelService_NodePrice_Handler,
		},
		{
			MethodName: "PodPrice",
			Handler:    _PricingModelService_PodPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cloudprovider/grpc/grpc.proto",
}
